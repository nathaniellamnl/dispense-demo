{"version":3,"sources":["components/Backdrop/Backdrop.module.css","Main/Main.module.css","components/Patient/PersonalInfo/PersonalInfo.js","components/Loader/Loader.module.css","components/Patient/PatientSideBar/NavigationItems.module.css","components/Patient/PatientProfile/ExistingPatientHeader/EPHeaderNav.module.css","components/Patient/PatientProfile/ExistingPatientProfile.module.css","assets/Images/Pill.jpg","context/auth-context.js","components/OutsideAlerter/OutsideAlerter.js","components/Navigation/Toolbar/Toolbar.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Patient/NewPatient/NewPatient.js","components/Patient/PatientSideBar/NavigationItem/NavigationItem.js","components/Patient/PatientSideBar/NavigationItems.js","components/Patient/PatientProfile/ExistingPatientHeader/NavigationItem/NavigationItem.js","components/Patient/PatientProfile/ExistingPatientHeader/EPHeaderNav.js","components/Patient/PatientProfile/ExistingPatientProfile.js","components/Patient/ExisitingPatient/ExistingPatient.js","Main/Main.js","auth/Signin.js","App.js","serviceWorker.js","index.js","assets/String.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/Patient/ExisitingPatient/ExistingPatient.module.css","components/Loader/Loader.js","components/Backdrop/Backdrop.js","components/Navigation/Toolbar/Toolbar.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Patient/NewPatient/NewPatient.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Patient/PersonalInfo/PersonalInfo.module.css","components/Modal/Modal.module.css","components/Patient/PatientSideBar/NavigationItem/NavigationItem.module.css","components/Patient/PatientProfile/ExistingPatientHeader/NavigationItem/NavigationItem.module.css","components/Modal/Modal.js"],"names":["module","exports","initialState","caseCode","touched","error","value","chineseName","englishName","age","contactNumber","dateOfRegistration","address","allergy","adverseDrugReaction","remark","PersonalInfo","props","useState","personState","setPersonState","isLoading","setIsLoading","showUploadSuccess","setShowUploadSuccess","useEffect","test","window","location","pathname","requestBody","query","split","fetch","graphqlServerUrl","method","body","JSON","stringify","headers","localStorage","getItem","then","res","status","alert","json","resData","data","patients","Date","toISOString","substring","catch","err","onInputChangeHandler","field","event","target","validation","replaceAll","length","RegExp","closeModalHandler","errorMsg","style","color","margin","className","classes","onSubmit","preventDefault","personStateCopy","cloneDeep","key","routeName","String","valueOf","Error","errors","updateInfo","show","modalClosed","type","onClick","htmlFor","id","name","onChange","NKDA_item","rows","cols","React","createContext","token","userId","login","tokenExpiration","logout","OutsideAlerter","wrapperRef","useRef","handleClickOutside","current","contains","cancelShowLogout","showLogout","document","addEventListener","removeEventListener","ref","children","Toolbar","setShowLogout","authData","useContext","AuthContext","header","IconButton","drawerToggleClicked","fill","cursor","display","logo","fontSize","navigationItem","NavigationItem","exact","to","link","activeClassName","active","navigationItems","NavigationItems","spacer","sideDrawer","attachedClasses","SideDrawer","Open","Close","Backdrop","clicked","closed","join","Logo","Layout","showSideDrawer","setShowSideDrawer","Patient","background","patientBriefInfo","setPatientBriefInfo","click","map","patient","index","_id","onNavHandler","clickedHeader","transformId","mainNavigation","navItems","text","auth","item","TransactionRecord","lazy","memo","component","setComponent","patientInfo","setPatientInfo","fallback","patientId","isNavClick","setIsNavClick","updateInfoHandler","infoObject","patientBriefInfoCopy","findIndex","ele","path","render","Main","main_container","NewPatient","ExistingPatient","useStyles","makeStyles","theme","paper","marginTop","spacing","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","width","submit","SignIn","emailRef","passwordRef","submitHandler","useHistory","email","password","Consumer","context","Container","maxWidth","Loader","CssBaseline","Avatar","Typography","variant","noValidate","TextField","inputRef","required","fullWidth","label","autoComplete","autoFocus","Button","Box","mt","PrintEntry","authStateReducer","currentAuthState","action","setItem","removeItem","App","useReducer","authState","dispatch","Provider","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","loader","backdrop","Modal","transform","opacity","height"],"mappings":"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","file":"static/js/main.14aad9d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1Ovz0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"Main_main_container__3lk47\"};","import React, { Fragment, useState, useEffect } from 'react';\n\n\nimport Modal from '../../Modal/Modal';\nimport Loader from '../../Loader/Loader';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { graphqlServerUrl } from '../../../assets/String';\nimport classes from './PersonalInfo.module.css';\n\n\nconst initialState = {\n  caseCode: { touched: false, error: false, value: \"\" },\n  chineseName: { touched: false, error: false, value: \"\" },\n  englishName: { touched: false, error: false, value: \"\" },\n  age: { touched: false, error: false, value: \"\" },\n  contactNumber: { touched: false, error: false, value: \"\" },\n  dateOfRegistration: { touched: false, error: false, value: \"\" },\n  address: { touched: false, error: false, value: \"\" },\n  allergy: { touched: false, error: false, value: \"\" },\n  adverseDrugReaction: { touched: false, error: false, value: \"\" },\n  remark: { touched: false, error: false, value: \"\" }\n};\n\nconst PersonalInfo = (props) => {\n  const [personState, setPersonState] = useState(initialState);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [showUploadSuccess, setShowUploadSuccess] = useState(false);\n\n  useEffect(() => {\n    const route = /[\\/]patient[\\/]existing[\\/].+/\n\n    if (route.test(window.location.pathname)) {\n      const requestBody = {\n        query: `  \n             query {\n               patients(_id:\"${window.location.pathname.split('/')[3]}\") {\n                caseCode\n                chineseName \n                englishName\n                age\n                contactNumber\n                dateOfRegistration\n                address\n                allergy\n                adverseDrugReaction\n                remark\n                updatedAt\n               }\n             }\n          `\n      };\n      setIsLoading(true);\n      fetch(graphqlServerUrl, {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer '+ localStorage.getItem('dispenseToken')\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          setIsLoading(false);\n          alert(\"error\");\n        }\n        return res.json();\n      }).then(resData => {\n        setPersonState({\n          caseCode: { touched: false, error: false, value: resData.data.patients[0].caseCode },\n          chineseName: { touched: false, error: false, value: resData.data.patients[0].chineseName },\n          englishName: { touched: false, error: false, value: resData.data.patients[0].englishName },\n          age: { touched: false, error: false, value: resData.data.patients[0].age },\n          contactNumber: { touched: false, error: false, value: resData.data.patients[0].contactNumber },\n          dateOfRegistration: { touched: false, error: false, value: resData.data.patients[0].dateOfRegistration ? new Date(resData.data.patients[0].dateOfRegistration).toISOString().substring(0, 10) : \"\" },\n          address: { touched: false, error: false, value: resData.data.patients[0].address },\n          allergy: { touched: false, error: false, value: resData.data.patients[0].allergy },\n          adverseDrugReaction: { touched: false, error: false, value: resData.data.patients[0].adverseDrugReaction },\n          remark: { touched: false, error: false, value: resData.data.patients[0].remark }\n        });\n        setIsLoading(false);\n      }).catch(err => {\n        setIsLoading(false);\n        alert(err);\n      })\n    } else {\n      setPersonState(initialState);\n    }\n\n  }, [window.location.pathname]);\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n\n    let dateOfRegistration = \"\";\n\n    if (personState.dateOfRegistration.value.length > 0) {\n      dateOfRegistration = new Date(personState.dateOfRegistration.value).toISOString();\n    }\n\n    const personStateCopy = cloneDeep(personState);\n    let error = false;\n    for (const key in personStateCopy) {\n      error = error || validation(key, personStateCopy[key].value);\n      personStateCopy[key].touched = true;\n      personStateCopy[key].error = validation(key, personStateCopy[key].value);\n    }\n\n\n    if (error) {\n      setPersonState({ ...personStateCopy });\n      return;\n    }\n\n    let requestBody;\n\n    if (props.routeName === \"/patient/new\") {\n      requestBody = {\n        query: `\n           mutation {\n            createPatient (\n               patientInfoInput:{\n                caseCode: \"${personState.caseCode.value}\" ,\n                chineseName:\"${personState.chineseName.value}\",\n                englishName: \"${personState.englishName.value}\",\n                age:\"${String.valueOf(personState.age.value)}\",\n                contactNumber:\"${personState.contactNumber.value}\",\n                dateOfRegistration:\"${dateOfRegistration}\",\n                address: \"${personState.address.value}\",\n                allergy: \"${personState.allergy.value}\",\n                adverseDrugReaction: \"${personState.adverseDrugReaction.value}\",\n                remark: \"${personState.remark.value}\"           \n                }) {\n               age\n             }\n           }\n        `\n      };\n    } else {\n      //window.location.pathname.split('/')[3] patientId\n      requestBody = {\n        query: `\n           mutation {\n            updatePatient (\n              _id:\"${window.location.pathname.split('/')[3]}\",\n               patientInfoInput:{\n                caseCode: \"${personState.caseCode.value}\" ,\n                chineseName:\"${personState.chineseName.value}\",\n                englishName: \"${personState.englishName.value}\",\n                age:\"${personState.age.value}\",\n                contactNumber:\"${personState.contactNumber.value}\",\n                dateOfRegistration:\"${dateOfRegistration}\",\n                address: \"${personState.address.value}\",\n                allergy: \"${personState.allergy.value}\",\n                adverseDrugReaction: \"${personState.adverseDrugReaction.value}\",\n                remark: \"${personState.remark.value}\"           \n                }) {\n               age\n             }\n           }\n        `\n      };\n    }\n\n    setIsLoading(true);\n    fetch(graphqlServerUrl, {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+ localStorage.getItem('dispenseToken')\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error(\"Failed\");\n      }\n      return res.json();\n    }).then(resData => {\n      if (resData.errors) {\n        alert(resData.errors);\n      } else if (props.routeName === \"/patient/new\") {\n        setShowUploadSuccess(true);\n        setPersonState(initialState);\n      } else {\n        //update patient sidebar\n        props.updateInfo(window.location.pathname.split('/')[3], {\n          caseCode: personStateCopy.caseCode.value,\n          englishName: personStateCopy.englishName.value,\n          chineseName: personState.chineseName.value\n        });\n        setShowUploadSuccess(true);\n      }\n\n      setIsLoading(false);\n\n    }).catch(err => {\n\n      setIsLoading(false);\n      alert(\"An unexpected error occured!\");\n    })\n\n  }\n\n  const NKDAHandler = () => {\n    setPersonState({ ...personState, allergy: { ...personState.allergy, value: \"No Known Drug Allergy\" } });\n  }\n\n  const onInputChangeHandler = (field, event) => {\n    setPersonState({ ...personState, [field]: { touched: true, value: event.target.value, error: validation(field, event.target.value) } });\n  }\n\n  const validation = (field, value) => {\n    let error = false;\n    if (field === \"age\") {\n      error = value && value.replaceAll(\" \", \"\").length > 0 && (+value) >= 0 && (+value) <= 120 ? false : true;\n    } else if (field === \"contactNumber\") {\n      const regex = new RegExp(/^\\+?[0-9]+$/);\n      error = !regex.test(value.replaceAll(\" \", \"\"));\n    } else if (field === \"caseCode\") {\n      error = value.replaceAll(\" \", \"\").length === 0 ? true : false;\n    }\n    return error;\n  }\n\n  const closeModalHandler = () => {\n    setShowUploadSuccess(false);\n  }\n\n  let errorMsg = <p style={{ color: \"#f44336\", margin: \"2px\" }}>Invalid</p>;\n\n  return (\n    <Fragment>\n      {isLoading ? <Loader /> :\n        <form className={classes[\"form-container\"]} onSubmit={onSubmitHandler}>\n          <Modal show={showUploadSuccess} modalClosed={closeModalHandler}>\n            <div className={classes[\"success-text\"]}>\n              <p>Success!</p>\n              <button type=\"button\" onClick={closeModalHandler}>Confirm</button>\n            </div>\n          </Modal>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"caseCode\">Case Code:</label>\n            <input\n              className={personState.caseCode.error && personState.caseCode.touched ? classes[\"error\"] : null}\n              type=\"text\"\n              id=\"caseCode\"\n              name=\"caseCode\"\n              value={personState.caseCode.value}\n              onChange={(event) => onInputChangeHandler(\"caseCode\", event)} ></input>\n            {personState.caseCode.error && personState.caseCode.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"chineseName\">Chinese Name:</label>\n            <input\n              className={personState.chineseName.error && personState.chineseName.touched ? classes[\"error\"] : null}\n              type=\"text\"\n              id=\"chineseName\"\n              name=\"chineseName\"\n              value={personState.chineseName.value}\n              onChange={(event) => onInputChangeHandler(\"chineseName\", event)}></input>\n            {personState.chineseName.error && personState.chineseName.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"englishName\">English Name:</label>\n            <input\n              className={personState.englishName.error && personState.englishName.touched ? classes[\"error\"] : null}\n              type=\"text\"\n              id=\"englishName\"\n              name=\"englishName\"\n              value={personState.englishName.value}\n              onChange={(event) => onInputChangeHandler(\"englishName\", event)}></input>\n            {personState.englishName.error && personState.englishName.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"age\">Age:</label>\n            <input\n              className={personState.age.error && personState.age.touched ? classes[\"error\"] : null}\n              type=\"number\"\n              id=\"age\"\n              name=\"age\"\n              value={personState.age.value}\n              onChange={(event) => onInputChangeHandler(\"age\", event)}></input>\n            {personState.age.error && personState.age.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"contactNumber\">Contact Number:</label>\n            <input\n              className={personState.contactNumber.error && personState.contactNumber.touched ? classes[\"error\"] : null}\n              type=\"phone\"\n              id=\"contactNumber\"\n              name=\"contactNumber\"\n              value={personState.contactNumber.value}\n              onChange={(event) => onInputChangeHandler(\"contactNumber\", event)}></input>\n            {personState.contactNumber.error && personState.contactNumber.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"regDate\">Date of Registration</label>\n            <input\n              className={personState.dateOfRegistration.error && personState.dateOfRegistration.touched ? classes[\"error\"] : null}\n              type=\"date\"\n              id=\"regDate\"\n              name=\"regDate\"\n              value={personState.dateOfRegistration.value}\n              onChange={(event) => onInputChangeHandler(\"dateOfRegistration\", event)}></input>\n            {personState.dateOfRegistration.error && personState.dateOfRegistration.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"address\">Address:</label>\n            <textarea\n              className={personState.address.error && personState.address.touched ? classes[\"error\"] : null}\n              type=\"text\"\n              id=\"address\"\n              name=\"address\"\n              value={personState.address.value}\n              onChange={(event) => onInputChangeHandler(\"address\", event)}></textarea>\n            {personState.address.error && personState.address.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"allergy\" >Allergy:</label>\n            <div className={classes.NKDA_item} onClick={NKDAHandler}>NKDA</div>\n            <textarea\n              className={personState.allergy.error && personState.allergy.touched ? classes[\"error\"] : null}\n              id=\"allergy\"\n              name=\"allergy\"\n              rows=\"4\"\n              cols=\"20\"\n              value={personState.allergy.value}\n              onChange={(event) => onInputChangeHandler(\"allergy\", event)}></textarea>\n            {personState.allergy.error && personState.allergy.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"adr\">Adverse Drug Reaction:</label>\n            <textarea\n              className={personState.adverseDrugReaction.error && personState.adverseDrugReaction.touched ? classes[\"error\"] : null}\n              id=\"adr\"\n              name=\"adr\"\n              rows=\"4\"\n              cols=\"20\"\n              value={personState.adverseDrugReaction.value}\n              onChange={(event) => onInputChangeHandler(\"adverseDrugReaction\", event)}></textarea>\n            {personState.adverseDrugReaction.error && personState.adverseDrugReaction.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"remark\">Remark:</label>\n            <textarea\n              className={personState.remark.error && personState.remark.touched ? classes[\"error\"] : null}\n              id=\"remark\"\n              name=\"remark\"\n              rows=\"4\"\n              cols=\"20\"\n              value={personState.remark.value}\n              onChange={(event) => onInputChangeHandler(\"remark\", event)}></textarea>\n            {personState.remark.error && personState.remark.touched ? errorMsg : null}\n          </section>\n          <button type=\"submit\">{props.routeName === \"/patient/new\" ? \"Create\" : \"Update\"}</button>\n        </form>\n      }\n    </Fragment>\n  )\n}\n\nexport default PersonalInfo;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__5YQT7\",\"load6\":\"Loader_load6__1X31U\",\"round\":\"Loader_round__1L8ck\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"NavigationItems_list__3Dhpt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-nav\":\"EPHeaderNav_main-nav__1cjQF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component-container\":\"ExistingPatientProfile_component-container__2mEvy\"};","module.exports = __webpack_public_path__ + \"static/media/Pill.6d98cca6.jpg\";","import React from 'react';\r\n\r\nexport default React.createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: (token, userId, tokenExpiration) => {\r\n        \r\n    },\r\n    logout: () => {}\r\n});","import React, { useRef, useEffect } from \"react\";\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\n\r\nconst OutsideAlerter = (props)=>{\r\n    const wrapperRef = useRef(null);\r\n    useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n                // alert(\"You clicked outside of me!\");\r\n                props.cancelShowLogout();\r\n            } else if (wrapperRef.current && wrapperRef.current.contains(event.target)){\r\n                props.showLogout();\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [wrapperRef]);   \r\n\r\n    return(\r\n        <div ref={wrapperRef}>{props.children}</div>\r\n    )\r\n}\r\n\r\n// function useOutsideAlerter(ref,props) {\r\n//     useEffect(() => {\r\n//         /**\r\n//          * Alert if clicked on outside of element\r\n//          */\r\n//         function handleClickOutside(event) {\r\n//             if (ref.current && !ref.current.contains(event.target)) {\r\n//                 // alert(\"You clicked outside of me!\");\r\n//                 props.cancelShowLogout();\r\n//             }\r\n//         }\r\n\r\n//         // Bind the event listener\r\n//         document.addEventListener(\"mousedown\", handleClickOutside);\r\n//         return () => {\r\n//             // Unbind the event listener on clean up\r\n//             document.removeEventListener(\"mousedown\", handleClickOutside);\r\n//         };\r\n//     }, [ref]);\r\n// }\r\n\r\n// /**\r\n//  * Component that alerts if you click outside of it\r\n//  */\r\n// export default function OutsideAlerter(props) {\r\n//     const wrapperRef = useRef(null);\r\n//     useOutsideAlerter(wrapperRef, props);\r\n\r\n//     return <div ref={wrapperRef}>{props.children}</div>;\r\n// }\r\n\r\nexport default OutsideAlerter;","import React, { useState, useContext } from 'react';\r\n\r\nimport AuthContext from '../../../context/auth-context'\r\nimport OutsideAlerter from '../../OutsideAlerter/OutsideAlerter';\r\nimport classes from './Toolbar.module.css';\r\nimport { IconButton } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst Toolbar = (props) => {\r\n    const [showLogout, setShowLogout] = useState(false);\r\n    const authData = useContext(AuthContext);\r\n\r\n    const logOutHandler = () => {\r\n        authData.logout();\r\n    }\r\n\r\n    const cancelShowLogoutHandler = () => {\r\n        setShowLogout(false);\r\n    }\r\n\r\n    const showLogoutHandler = () => {\r\n        setShowLogout(true);\r\n    }\r\n\r\n    return (\r\n        <div header className={classes.Toolbar}>\r\n            {/* < header className={classes.Toolbar} > */}\r\n            <IconButton onClick={props.drawerToggleClicked}>\r\n                <MenuIcon style={{ fill: \"white\", cursor: 'pointer' }} />\r\n            </IconButton>\r\n\r\n            <OutsideAlerter cancelShowLogout={cancelShowLogoutHandler} showLogout={showLogoutHandler}>\r\n                <div className={classes[\"circle\"]} >A</div>\r\n                <div\r\n                    className={classes[\"logout\"]}\r\n                    style={{ display: showLogout ? 'block' : 'none' }}>\r\n                    <ul >\r\n                        <li onClick={logOutHandler}>Log out</li>\r\n                    </ul>\r\n                </div>\r\n            </OutsideAlerter>\r\n\r\n            {/* </header> */}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Toolbar;","import React, { Fragment } from 'react';\r\n\r\nimport PharmacyIcon from '@material-ui/icons/LocalPharmacy';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <Fragment>\r\n        <div className={classes[\"Logo\"]}>\r\n            <PharmacyIcon style={{ fill: \"#ab1032\", fontSize: 50 }} />\r\n            <div> PHHK</div>\r\n        </div>\r\n        <div>\r\n            <p className={classes[\"welcome-msg\"]}>\r\n                Welcome, Admin\r\n            </p>\r\n        </div>\r\n        <div >\r\n            <p className={classes[\"demo\"]}>\r\n                Dispense Demo\r\n            </p>\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        {/* NavLink auto determines if it is active */}\r\n        <NavLink\r\n            exact={props.exact}\r\n            to={props.link}\r\n            activeClassName={classes.active}>\r\n            <div>{props.children}</div>\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport PatientIcon from '@material-ui/icons/PermContactCalendar';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\n\r\n\r\nconst navigationItems = () => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/patient/new\">\r\n            <PersonAddIcon style={{fontSize: 30}}/><span className={classes.spacer} />New Patient\r\n            </NavigationItem>\r\n        <NavigationItem link=\"/patient/existing\">\r\n            <PatientIcon style={{fontSize: 30}}/><span className={classes.spacer} />Existing Patient\r\n        </NavigationItem>       \r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React, {Fragment} from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../Backdrop/Backdrop';\r\n\r\nconst sideDrawer = (props) => {\r\n\r\n    let attachedClasses;\r\n\r\n    if(props.show) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    } else {\r\n        attachedClasses = [classes.SideDrawer, classes.Close];\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Backdrop show={props.show} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <div className={classes[\"spacer\"]}></div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Fragment, useState } from 'react';\r\n\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nconst Layout = (props) => {\r\n    const [showSideDrawer, setShowSideDrawer] = useState(false);\r\n\r\n    const sideDrawerToggleHandler = () => {\r\n        setShowSideDrawer(!showSideDrawer);\r\n    }\r\n\r\n    const sideDrawerCloseHandler = () => {\r\n        setShowSideDrawer(false);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Toolbar drawerToggleClicked={sideDrawerToggleHandler} />\r\n            <SideDrawer show={showSideDrawer} closed={sideDrawerCloseHandler} />\r\n            {/* <main className={classes.Content}> */}\r\n                {props.children}\r\n            {/* </main> */}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Layout;","import React from 'react';\n\nimport classes from './NewPatient.module.css';\nimport PersonalInfo from '../PersonalInfo/PersonalInfo';\nimport image from '../../../assets/Images/Pill.jpg'\n\n// const AsyncPersonInfo = asyncComponent(()=> {\n//     return import('./PersonalInfo/Personalnfo');\n// });\n\nconst Patient = (props) => {\n\n    return (\n        <div className={classes[\"new-patient-container\"]}>\n            <div className={classes.background}>\n                {/* image */}\n            </div>\n            <div className={classes[\"personal-info-container\"]}>\n                <PersonalInfo routeName=\"/patient/new\" token={props.token}/>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Patient;\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        {/* NavLink auto determines if it is active */}\r\n        <NavLink\r\n            to={props.link}\r\n            activeClassName={classes.active}>\r\n                 {props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React, {useState, useEffect} from 'react';\r\n\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst NavigationItems = (props) => {\r\n    const[patientBriefInfo, setPatientBriefInfo] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        setPatientBriefInfo(props.patientBriefInfo);\r\n    },[props]);\r\n\r\n    return (\r\n            <ul onClick={props.click} className={classes['list']}>\r\n                {patientBriefInfo? patientBriefInfo.map((patient,index) => {\r\n                  return  <NavigationItem link={\"/patient/existing/\" + patient._id} key={index}>\r\n                        {patient.caseCode + \" \" + patient.chineseName + \"(\" + patient.englishName + \")\"}\r\n                    </NavigationItem>\r\n                }):null}\r\n            </ul>\r\n    )\r\n};\r\n\r\nexport default NavigationItems;","import { Switch } from '@material-ui/core';\r\nimport React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst transformId = (id) => {\r\n    switch(id) {\r\n        case \"personalinfo\":\r\n            return \"Personal Information\";\r\n        case  \"transactionrecord\":\r\n            return \"Transaction Record\";    \r\n    }\r\n}\r\n\r\nconst navigationItem = (props) => {\r\n    return (\r\n    <li className={classes.NavigationItem} onClick={()=>props.onNavHandler(props.id) }>\r\n        <button className={props.id==props.clickedHeader?classes.active:null}>{transformId(props.id)}</button>\r\n        </li>\r\n        )\r\n};\r\n\r\nexport default navigationItem;\r\n\r\n//","import React from 'react';\n\nimport NavigationItem from './NavigationItem/NavigationItem';\nimport classes from './EPHeaderNav.module.css';\n\n\n\nconst mainNavigation = props => {\n  const id = window.location.pathname.split('/')[3];\n  const navItems = [\n    { id: 'personalinfo', text: 'Personal Information', link: `/patient/existing/${id}/personalinfo`, auth: true },\n    { id: 'transactionrecord', text: 'Transaction Record', link: `/patient/existing/${id}/transactionrecord`, auth: true },\n  ];\n\n  return (<nav>\n    <ul className={classes[\"main-nav\"]}>\n      {navItems.map(item => {\n         return <NavigationItem clickedHeader={props.clickedHeader} onNavHandler={props.onNavHandler} key={item.id} id={item.id} link={item.link} text={item.text} />\n      })}\n    </ul>\n  </nav>\n  )\n};\n\nexport default mainNavigation;\n","import React, { Fragment, Suspense, useEffect, useState, useContext } from 'react';\r\n\r\nimport Header from '../PatientProfile/ExistingPatientHeader/EPHeaderNav';\r\nimport classes from './ExistingPatientProfile.module.css';\r\nimport {graphqlServerUrl} from '../../../assets/String';\r\nconst TransactionRecord = React.lazy(() => import('./TransactionRecord/TransactionRecord'));\r\nconst PersonalInfo = React.lazy(() => import('../PersonalInfo/PersonalInfo'));\r\n\r\nconst ExistingPatientProfile = (props) => {\r\n\r\n    const [component, setComponent] = useState(\"personalinfo\");\r\n    const [patientInfo, setPatientInfo] = useState('');\r\n    \r\n    useEffect(() => {\r\n          const requestBody = {\r\n            query: `  \r\n                 query {\r\n                   patients(_id:\"${window.location.pathname.split('/')[3]}\") {\r\n                    caseCode\r\n                    chineseName \r\n                    englishName\r\n                   }\r\n                 }\r\n              `\r\n          };\r\n          fetch(graphqlServerUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+ localStorage.getItem(\"dispenseToken\")\r\n            }\r\n          }).then(res => {\r\n            if (res.status !== 200 && res.status !== 201) {\r\n              throw new Error(\"Failed\");\r\n    \r\n            }\r\n            return res.json();\r\n          }).then(resData => {\r\n            setPatientInfo([...resData.data.patients, {_id:window.location.pathname.split('/')[3]}]);\r\n    \r\n          }).catch(err => {\r\n            alert(\"An unexpected error occured!\");\r\n          })\r\n    \r\n      }, [window.location.pathname]);\r\n    \r\n    const onClickHandler = (id) => {\r\n        setComponent(id);\r\n    }\r\n\r\n    return (\r\n        <section >\r\n            <Header onNavHandler={onClickHandler} clickedHeader={component}/>\r\n            <div className={classes['component-container']}>\r\n                {component === \"personalinfo\" ?\r\n                    <Suspense fallback={<h1>loading...</h1>}>\r\n                        <PersonalInfo\r\n                            token={localStorage.getItem(\"dispenseToken\")}\r\n                            updateInfo={props.updateInfo}\r\n                            {...props}\r\n                            routeName=\"/patient/existing\"\r\n                        />\r\n                    </Suspense>\r\n                    : null}\r\n                {component === \"transactionrecord\" ?\r\n                    <Suspense fallback={<h1>loading...</h1>}>\r\n                        <TransactionRecord\r\n                        token={localStorage.getItem(\"dispenseToken\")}\r\n                        patientInfo={patientInfo}\r\n                        patientId={window.location.pathname.split('/')[3]}\r\n                            {...props}\r\n                        />\r\n                    </Suspense>\r\n                    : null}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nexport default React.memo(ExistingPatientProfile);","import React, {useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport { graphqlServerUrl } from '../../../assets/String';\nimport NavigationItems from '../PatientSideBar/NavigationItems';\nimport classes from './ExistingPatient.module.css';\nimport ExistingPatientProfile from '../PatientProfile/ExistingPatientProfile';\nimport AuthContext from '../../../context/auth-context';\n\n// const PersonalInfo = React.lazy(() => import('../PersonalInfo/Personalnfo')\n// );\n\n// const ExistingPatientProfile = React.lazy(() => import('../PatientProfile/ExistingPatientProfile'));\n\n\nconst Patient = (props) => {\n\n    const [patientBriefInfo, setPatientBriefInfo] = useState('');\n    const [isNavClick, setIsNavClick] = useState(false);\n\n    useEffect(() => {\n        const requestBody = {\n            query: `\n                 query {\n                   patients {\n                    _id\n                    caseCode\n                    chineseName \n                    englishName\n                   }\n                 }\n              `\n        };\n        \n        fetch(graphqlServerUrl, {\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer '+ props.token\n            }\n        }).then(res => {\n            if (res.status !== 200 && res.status !== 201) {\n                throw new Error(\"Failed\");\n\n            }\n\n            return res.json();\n        }).then(resData => {\n            setPatientBriefInfo([...resData.data.patients]);\n\n        }).catch(err => {\n        })\n    }, [])\n\n    const onNavHandler = () => {\n        setIsNavClick(true);\n    }\n\n    const updateInfoHandler = (id, infoObject) => {\n        const patientBriefInfoCopy = [...patientBriefInfo];\n        const index=patientBriefInfoCopy.findIndex(ele=>ele._id === id);\n        patientBriefInfoCopy[index] = {...infoObject,_id:id};\n\n        setPatientBriefInfo(patientBriefInfoCopy);\n    }\n    return (\n        <div className={classes[\"main-container\"]}>\n            <div>\n                <p className={classes['sidebar-header']}>Patient List</p>\n                <nav className={classes['sidebar']}>\n                    <NavigationItems patientBriefInfo={patientBriefInfo} click={onNavHandler} />\n                </nav>\n            </div>\n            <div className={classes[\"main-content\"]}>\n                {isNavClick ?\n                    <Route\n                        exact\n                        path=\"/patient/existing/:id\"\n                        render={props => (\n                                <ExistingPatientProfile\n                                   token={props.token}\n                                    updateInfo={updateInfoHandler}\n                                    {...props}\n                                />\n                        )}\n                    />\n                    : null}\n\n            </div>\n        </div>\n    )\n}\n\nexport default Patient;\n","import React, { Fragment } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport Layout from '../components/Layout/Layout'\r\nimport classes from './Main.module.css';\r\nimport NewPatient from '../components/Patient/NewPatient/NewPatient';\r\nimport ExistingPatient from '../components/Patient/ExisitingPatient/ExistingPatient';\r\n\r\n\r\nconst Main = (props) => {\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* <AuthContext.Consumer> */}\r\n            {/* {(context) => {\r\n                if (context.token) { */}\r\n            {\r\n                localStorage.getItem(\"dispenseToken\")!=null && localStorage.getItem(\"dispenseToken\")!=\"null\"?\r\n                    (\r\n                        <Layout>\r\n                            <main className={classes.main_container}>\r\n                                {/* <menu className={classes.main_sidebar}>\r\n                                <NavigationItems />\r\n                            </menu> */}\r\n                                <Switch>\r\n                                    <Route\r\n                                        path=\"/patient/new\"\r\n                                        render={props => (\r\n                                            <NewPatient\r\n                                                {...props}\r\n                                                token={localStorage.getItem(\"dispenseToken\")}\r\n                                                routeName=\"/patient/new\"\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                    <Route\r\n                                        path=\"/patient/existing\"\r\n                                        render={props => (\r\n                                            <ExistingPatient\r\n                                                token={localStorage.getItem(\"dispenseToken\")}\r\n                                                {...props}\r\n                                                routeName=\"/patient/existing\"\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Switch>\r\n                            </main>\r\n                        </Layout>\r\n                    )\r\n                    : <Redirect to='/signin' />\r\n            }\r\n            {/* }} */}\r\n            {/* </AuthContext.Consumer> */}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Main;","import React, { useRef, useContext, useState } from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\n\r\nimport { graphqlServerUrl } from '../assets/String'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport AuthContext from '../context/auth-context';\r\nimport Loader from '../components/Loader/Loader';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const authData = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n\r\n    const requestBody = {\r\n      query: `\r\n         query {\r\n           login (email: \"${email}\", password: \"${password}\") {\r\n             userId\r\n             token\r\n             tokenExpiration\r\n           }\r\n         }\r\n      `\r\n    };\r\n\r\n    setIsLoading(true);\r\n    fetch(graphqlServerUrl, {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \r\n      }\r\n    }).then(res => {\r\n      if (res.status !== 200 && res.status !== 201) {\r\n        throw new Error(\"Failed\");\r\n      }\r\n\r\n      return res.json();\r\n    }).then(resData => {\r\n      if (resData.data.login.token) {\r\n        authData.login(\r\n          resData.data.login.token,\r\n          resData.data.login.userId,\r\n          resData.data.login.tokenExpiration);\r\n      }\r\n      \r\n    }).catch(err => {\r\n      setIsLoading(false);\r\n      alert(\"Incorrect email or password!\"); \r\n    })\r\n\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Consumer>\r\n      {(context) => {\r\n        if (!context.token) {\r\n          return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n              {isLoading? <Loader />: null}\r\n              <CssBaseline />\r\n              <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                  <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                  Sign in\r\n        </Typography>\r\n                <form className={classes.form} noValidate onSubmit={submitHandler}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    inputRef={emailRef}\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    autoFocus\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    inputRef={passwordRef}\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                  >\r\n                    Sign In\r\n          </Button>\r\n\r\n                </form>\r\n              </div>\r\n              <Box mt={8}>\r\n              </Box>\r\n              <p>(For demo purpose)You can use test@test.com as the email and 123456 as the password</p>\r\n            </Container>\r\n          )\r\n        } else {\r\n          return <Redirect to=\"/\" />\r\n        }\r\n      }}\r\n    </AuthContext.Consumer>\r\n  );\r\n}","import React, { Fragment, useReducer, Suspense } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport Main from './Main/Main';\nimport LoginPage from './auth/Signin';\nimport AuthContext from './context/auth-context';\nconst PrintEntry = React.lazy(() => import('./components/Patient/PatientProfile/TransactionRecord/PrintTransaction/PrintTransaction'));\n\nconst authStateReducer = (currentAuthState, action) => {\n  switch (action.type) {\n    case 'Login':\n      localStorage.setItem(\"dispenseToken\",action.token);\n      return { ...currentAuthState, token: action.token, userId: action.userId };\n    case 'Logout':\n      localStorage.removeItem(\"dispenseToken\");\n      return { ...currentAuthState, token: null, userId: null };\n    default:\n      throw new Error('Should not get there!');\n  }\n};\n\n\nconst App = props => {\n\n  const [authState, dispatch] = useReducer(authStateReducer, {});\n\n  const login = (token, userId, tokenExpiration) => {\n    dispatch({ type: 'Login', token: token, userId: userId });\n  }\n\n  const logout = () => {\n    dispatch({ type: 'Logout' });\n  }\n\n  return (\n    <BrowserRouter>\n      <Fragment>\n        <AuthContext.Provider value={{\n          token: authState.token,\n          userId: authState.userId,\n          login: login,\n          logout: logout\n        }}>\n          <main>\n            <Switch>\n              <Route\n                path=\"/signin\"\n                render={props => (\n                  <LoginPage\n                    {...props}\n                  />\n                )}\n              />\n              <Route  \n              path=\"/print\"\n                render={props => (\n                  <Suspense fallback={<div>Loading...</div>}>\n                      <PrintEntry/>\n                  </Suspense>\n                )}\n              />\n              <Route\n                path=\"/\"\n                render={props => (\n                  <Main\n                    {...props}\n                  />\n                )}\n              />\n              <Redirect to=\"/\" />\n            </Switch>\n          </main>\n        </AuthContext.Provider>\n      </Fragment>\n    </BrowserRouter>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","exports.graphqlServerUrl='https://whispering-basin-06963.herokuapp.com/graphql';\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1FLmz\",\"Open\":\"SideDrawer_Open__1HvEi\",\"Close\":\"SideDrawer_Close__2M6UG\",\"spacer\":\"SideDrawer_spacer__1DPvu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"ExistingPatient_main-container__syIGb\",\"sidebar\":\"ExistingPatient_sidebar__3PZ9k\",\"sidebar-header\":\"ExistingPatient_sidebar-header__3cHRe\"};","import React from 'react';\n\nimport classes from './Loader.module.css';\n\nconst loader = props => (\n  <div className={classes.Loader}>Loading...</div>\n);\n\nexport default loader;\n","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__12p80\",\"circle\":\"Toolbar_circle__UcnzW\",\"logout\":\"Toolbar_logout__dpzyF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3c4-b\",\"welcome-msg\":\"Logo_welcome-msg__y2J9L\",\"demo\":\"Logo_demo__3DcFA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fvrF\",\"spacer\":\"NavigationItems_spacer__F1HBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-patient-container\":\"NewPatient_new-patient-container__1I9xr\",\"personal-info-container\":\"NewPatient_personal-info-container__3Zj-v\",\"background\":\"NewPatient_background__3Tu4d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__32yG2\",\"active\":\"NavigationItem_active__XopZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-container\":\"PersonalInfo_form-container__2QQ0t\",\"info-item\":\"PersonalInfo_info-item__rP1KZ\",\"NKDA_item\":\"PersonalInfo_NKDA_item__1FdCt\",\"error\":\"PersonalInfo_error__24V_t\",\"success-text\":\"PersonalInfo_success-text__1kTOT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__35rfT\",\"close-icon-container\":\"Modal_close-icon-container__2dioi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__Y3yKC\",\"active\":\"NavigationItem_active__rgK2T\",\"spacer\":\"NavigationItem_spacer__cHSST\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1eRaQ\",\"active\":\"NavigationItem_active__1Y64k\"};","import React, { Fragment, useEffect } from 'react';\n\nimport classes from './Modal.module.css';\nimport Backdrop from '../Backdrop/Backdrop';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { IconButton } from '@material-ui/core';\n\n\nconst Modal = (props) => {\n\n  return (\n    <Fragment>\n      <Backdrop show={props.show}  />\n      <div\n        className={classes.Modal}\n        style={{\n          display: props.show ? 'block' : 'none',\n          transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n          opacity: props.show ? '1' : '0',\n          width: props.width,\n          height:props.height,\n        }}>\n         <div className={classes[\"close-icon-container\"]}>\n           <IconButton onClick={props.modalClosed}>\n             <CloseIcon style={{ cursor: 'pointer' }}/>\n           </IconButton>\n           </div> \n        {props.children}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Modal;"],"sourceRoot":""}