{"version":3,"sources":["components/Patient/PatientProfile/ExistingPatientHeader/NavigationItem/NavigationItem.module.css","components/Patient/PersonalInfo/PersonalInfo.module.css","UI/Button/Button.js","UI/Table/useTable.js","UI/Backdrop/Backdrop.module.css","Main/Main.module.css","components/Patient/PersonalInfo/PersonalInfo.js","UI/Loader/Loader.module.css","components/Patient/PatientSideBar/NavigationItems.module.css","components/Patient/PatientProfile/ExistingPatientHeader/EPHeaderNav.module.css","components/Patient/PatientProfile/ExistingPatientProfile.module.css","components/DrugInfo/DrugInfo.module.css","assets/String.js","context/auth-context.js","components/OutsideAlerter/OutsideAlerter.js","components/Navigation/Toolbar/Toolbar.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Patient/NewPatient/NewPatient.js","components/Patient/PatientSideBar/NavigationItem/NavigationItem.js","components/Patient/PatientSideBar/NavigationItems.js","components/Patient/PatientProfile/ExistingPatientHeader/NavigationItem/NavigationItem.js","components/Patient/PatientProfile/ExistingPatientHeader/EPHeaderNav.js","components/Patient/PatientProfile/ExistingPatientProfile.js","components/Patient/ExisitingPatient/ExistingPatient.js","components/DrugInfoEntry/DrugInfoEntry.js","components/DrugInfo/DrugInfo.js","Main/Main.js","auth/Signin.js","App.js","serviceWorker.js","index.js","UI/Loader/Loader.js","components/Navigation/SideDrawer/SideDrawer.module.css","UI/Modal/Modal.js","UI/Button/Button.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Patient/ExisitingPatient/ExistingPatient.module.css","UI/Backdrop/Backdrop.js","components/Navigation/Toolbar/Toolbar.module.css","components/Logo/Logo.module.css","components/Patient/NewPatient/NewPatient.module.css","components/DrugInfoEntry/DrugInfoEntry.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","UI/Modal/Modal.module.css","components/Patient/PatientSideBar/NavigationItem/NavigationItem.module.css"],"names":["module","exports","Button","props","className","classes","buttonNames","map","name","onClick","cancel","action","key","button","type","useStyles","makeStyles","theme","table","marginTop","spacing","fontWeight","color","backgroundColor","align","width","cursor","useTable","records","headCells","filterFn","pages","useState","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","descendingComparator","a","b","TblContainer","stickyHeader","children","TblHead","ele","Array","isArray","innerEle","i","id","sortDirection","label","disableSorting","active","direction","cellId","TblPagination","component","rowsPerPageOptions","count","length","onChangePage","onChangeRowsPerPage","recordsAfterPaginationAndSorting","array","comparator","sortArray","index","sort","stableSort","fn","getComparator","slice","initialState","caseCode","touched","error","chineseName","englishName","age","contactNumber","dateOfRegistration","address","allergy","adverseDrugReaction","remark","PersonalInfo","personState","setPersonState","isLoading","setIsLoading","showUploadSuccess","setShowUploadSuccess","useEffect","test","window","location","pathname","requestBody","query","split","fetch","graphqlServerUrl","method","body","JSON","stringify","headers","localStorage","getItem","then","res","status","alert","json","resData","data","patients","Date","toISOString","substring","catch","err","onInputChangeHandler","field","validation","replaceAll","RegExp","closeModalHandler","errorMsg","style","margin","onSubmit","preventDefault","personStateCopy","cloneDeep","routeName","String","valueOf","Error","errors","updateInfo","show","modalClosed","htmlFor","onChange","NKDA_item","rows","cols","React","createContext","token","userId","login","tokenExpiration","logout","OutsideAlerter","wrapperRef","useRef","handleClickOutside","current","contains","cancelShowLogout","showLogout","document","addEventListener","removeEventListener","ref","Toolbar","setShowLogout","authData","useContext","AuthContext","IconButton","drawerToggleClicked","fill","display","logo","fontSize","navigationItem","NavigationItem","exact","to","link","activeClassName","navigationItems","NavigationItems","spacer","sideDrawer","attachedClasses","SideDrawer","Open","Close","Backdrop","clicked","closed","join","Logo","Layout","showSideDrawer","setShowSideDrawer","Patient","background","patientBriefInfo","setPatientBriefInfo","click","patient","_id","onNavHandler","clickedHeader","transformId","mainNavigation","navItems","text","auth","item","TransactionRecord","lazy","memo","setComponent","patientInfo","setPatientInfo","fallback","patientId","isNavClick","setIsNavClick","updateInfoHandler","infoObject","patientBriefInfoCopy","findIndex","Loader","path","render","DrugInfoEntry","price","quantity","drugInfo","setDrugInfo","fieldErrors","setFieldErrors","variables","reducedDrug","drugs","console","log","validateField","onFieldChange","fieldName","marginLeft","placeholder","textAlign","buttonClasses","cancelModal","entryChangeHandler","createDrug","DrugInfo","setDrugs","items","setFilterFn","open","openEntry","setOpenEntry","openDeleteModal","setOpenDeleteModal","isDeleting","setIsDeleting","openEntryHandler","closeEntryHandler","closeDeleteModalHandler","operationHandler","operation","entry","drugsCopy","indexDelete","splice","indexUpdate","push","e","toLowerCase","filter","x","includes","Modal","alignItems","justifyContent","Paper","TableBody","TableRow","TableCell","Main","main_container","NewPatient","ExistingPatient","paper","flexDirection","avatar","palette","secondary","main","form","submit","SignIn","emailRef","passwordRef","submitHandler","useHistory","email","password","Consumer","context","Container","maxWidth","CssBaseline","Avatar","Typography","variant","noValidate","TextField","inputRef","required","fullWidth","autoComplete","autoFocus","Box","mt","PrintEntry","authStateReducer","currentAuthState","setItem","removeItem","App","useReducer","authState","dispatch","title","Provider","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message","loader","transform","opacity","height","backdrop"],"mappings":"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","file":"static/js/main.b70a5a9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1eRaQ\",\"active\":\"NavigationItem_active__1Y64k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-container\":\"PersonalInfo_form-container__2QQ0t\",\"info-item\":\"PersonalInfo_info-item__rP1KZ\",\"NKDA_item\":\"PersonalInfo_NKDA_item__1FdCt\",\"error\":\"PersonalInfo_error__24V_t\",\"success-text\":\"PersonalInfo_success-text__1kTOT\"};","import React from 'react';\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <section className={classes['button-container']}>\r\n            {\r\n            props.buttonNames.map((name) => {\r\n               return <button onClick={name===\"Cancel\"?props.cancel:props.action} key={name} className={classes.button} type=\"button\">{name}</button>\r\n            })}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Button;","import React, { useState } from 'react';\r\nimport { makeStyles, Table, TableCell, TableHead, TablePagination, TableRow, TableSortLabel } from '@material-ui/core';\r\nimport { Fragment } from 'react';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    table: {\r\n        marginTop: theme.spacing(3),\r\n        '& thead th': {\r\n            fontWeight: '600',\r\n            color: '#ffffff',\r\n            backgroundColor: '#f5073b',\r\n            align: 'left',\r\n            width: '100'\r\n        },\r\n        \"& tbody td\": {\r\n            fontWeight: '300',\r\n            align: 'left',\r\n            width: '100'\r\n        },\r\n        '& tbody tr:hover': {\r\n            backgroundColor: \"#fffbf2\",\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function useTable(records, headCells, filterFn,pages) {\r\n\r\n    const classes = useStyles();\r\n\r\n    // const pages = [1,2,3];\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(pages[page]);\r\n    const [order, setOrder] = useState();\r\n    const [orderBy, setOrderBy] = useState();\r\n\r\n    const TblContainer = props => (\r\n        <Table stickyHeader className={classes.table}>\r\n            {props.children}\r\n        </Table>\r\n    )\r\n\r\n    const TblHead = props => {\r\n\r\n        const handleSortRequest = cellId => {\r\n            const isAsc = orderBy === cellId && order === \"asc\";\r\n            setOrder(isAsc ? 'desc' : 'asc');\r\n            setOrderBy(cellId);\r\n        }\r\n\r\n        return (\r\n            <TableHead>\r\n                <TableRow>\r\n                    {\r\n                        headCells.map(ele => (\r\n                            Array.isArray(ele) ?\r\n                                ele.map((innerEle, i) => {\r\n                                    return (\r\n                                        <Fragment>\r\n                                            <TableCell key={innerEle[\"drugItem\" + (+(i+1))].id}\r\n                                                sortDirection={orderBy === innerEle[\"drugItem\" + (+(i+1))].id ? order : false}>\r\n                                                {innerEle[\"drugItem\" + (+(i+1))].label}\r\n                                            </TableCell>\r\n                                            <TableCell key={innerEle[\"drugQty\" + (+(i+1))]}\r\n                                                sortDirection={orderBy === innerEle[\"drugQty\" + (+(i+1))] ? order : false}>\r\n                                                {innerEle[\"drugQty\" + (+(i+1))].label}\r\n                                            </TableCell>\r\n                                        </Fragment>\r\n                                    )\r\n                                })\r\n                                :\r\n                                <TableCell key={ele.id}\r\n                                    sortDirection={orderBy === ele.id ? order : false} align=\"left\" width=\"220\">\r\n                                    {ele.disableSorting ? ele.label :\r\n                                        <TableSortLabel\r\n                                            active={orderBy === ele.id}\r\n                                            direction={orderBy === ele.id ? order : \"asc\"}\r\n                                            onClick={() => { handleSortRequest(ele.id) }} >\r\n                                            {ele.label}\r\n                                        </TableSortLabel>}\r\n                                </TableCell>\r\n                        ))\r\n                    }\r\n                </TableRow>\r\n            </TableHead>\r\n        )\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    }\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    }\r\n\r\n    const stableSort = (array, comparator) => {\r\n        const sortArray = array.map((ele, index) => [ele, index]);\r\n\r\n        sortArray.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        })\r\n\r\n        return sortArray.map(ele => ele[0]);\r\n    }\r\n\r\n    const getComparator = (order, orderBy) => {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    const descendingComparator = (a, b, orderBy) => {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    const recordsAfterPaginationAndSorting = () => {\r\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy))\r\n            .slice(page * rowsPerPage, (page + 1) * rowsPerPage);\r\n    }\r\n\r\n    const TblPagination = () => (<TablePagination\r\n        component=\"div\"\r\n        page={page}\r\n        rowsPerPageOptions={pages}\r\n        rowsPerPage={rowsPerPage}\r\n        count={records ? records.length : 0}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n    />)\r\n\r\n    return {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPaginationAndSorting\r\n    };\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3IWjo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"Main_main_container__3lk47\"};","import React, { Fragment, useState, useEffect } from 'react';\n\n\nimport Modal from '../../../UI/Modal/Modal';\nimport Loader from '../../../UI/Loader/Loader';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { graphqlServerUrl } from '../../../assets/String';\nimport classes from './PersonalInfo.module.css';\n\n\nconst initialState = {\n  caseCode: { touched: false, error: false, value: \"\" },\n  chineseName: { touched: false, error: false, value: \"\" },\n  englishName: { touched: false, error: false, value: \"\" },\n  age: { touched: false, error: false, value: \"\" },\n  contactNumber: { touched: false, error: false, value: \"\" },\n  dateOfRegistration: { touched: false, error: false, value: \"\" },\n  address: { touched: false, error: false, value: \"\" },\n  allergy: { touched: false, error: false, value: \"\" },\n  adverseDrugReaction: { touched: false, error: false, value: \"\" },\n  remark: { touched: false, error: false, value: \"\" }\n};\n\nconst PersonalInfo = (props) => {\n  const [personState, setPersonState] = useState(initialState);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [showUploadSuccess, setShowUploadSuccess] = useState(false);\n\n  useEffect(() => {\n    const route = /[\\/]patient[\\/]existing[\\/].+/\n\n    if (route.test(window.location.pathname)) {\n      const requestBody = {\n        query: `  \n             query {\n               patients(_id:\"${window.location.pathname.split('/')[3]}\") {\n                caseCode\n                chineseName \n                englishName\n                age\n                contactNumber\n                dateOfRegistration\n                address\n                allergy\n                adverseDrugReaction\n                remark\n                updatedAt\n               }\n             }\n          `\n      };\n      setIsLoading(true);\n      fetch(graphqlServerUrl, {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('dispenseToken')\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          setIsLoading(false);\n          alert(\"error\");\n        }\n        return res.json();\n      }).then(resData => {\n        setPersonState({\n          caseCode: { touched: false, error: false, value: resData.data.patients[0].caseCode },\n          chineseName: { touched: false, error: false, value: resData.data.patients[0].chineseName },\n          englishName: { touched: false, error: false, value: resData.data.patients[0].englishName },\n          age: { touched: false, error: false, value: resData.data.patients[0].age },\n          contactNumber: { touched: false, error: false, value: resData.data.patients[0].contactNumber },\n          dateOfRegistration: { touched: false, error: false, value: resData.data.patients[0].dateOfRegistration ? new Date(resData.data.patients[0].dateOfRegistration).toISOString().substring(0, 10) : \"\" },\n          address: { touched: false, error: false, value: resData.data.patients[0].address },\n          allergy: { touched: false, error: false, value: resData.data.patients[0].allergy },\n          adverseDrugReaction: { touched: false, error: false, value: resData.data.patients[0].adverseDrugReaction },\n          remark: { touched: false, error: false, value: resData.data.patients[0].remark }\n        });\n        setIsLoading(false);\n      }).catch(err => {\n        setIsLoading(false);\n        alert(err);\n      })\n    } else {\n      setPersonState(initialState);\n    }\n\n  }, [window.location.pathname]);\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n\n    let dateOfRegistration = \"\";\n\n    if (personState.dateOfRegistration.value.length > 0) {\n      dateOfRegistration = new Date(personState.dateOfRegistration.value).toISOString();\n    }\n\n    const personStateCopy = cloneDeep(personState);\n    let error = false;\n    for (const key in personStateCopy) {\n      error = error || validation(key, personStateCopy[key].value);\n      personStateCopy[key].touched = true;\n      personStateCopy[key].error = validation(key, personStateCopy[key].value);\n    }\n\n\n    if (error) {\n      setPersonState({ ...personStateCopy });\n      return;\n    }\n\n    let requestBody;\n\n    if (props.routeName === \"/patient/new\") {\n      requestBody = {\n        query: `\n           mutation {\n            createPatient (\n               patientInfoInput:{\n                caseCode: \"${personState.caseCode.value}\" ,\n                chineseName:\"${personState.chineseName.value}\",\n                englishName: \"${personState.englishName.value}\",\n                age:\"${String.valueOf(personState.age.value)}\",\n                contactNumber:\"${personState.contactNumber.value}\",\n                dateOfRegistration:\"${dateOfRegistration}\",\n                address: \"${personState.address.value}\",\n                allergy: \"${personState.allergy.value}\",\n                adverseDrugReaction: \"${personState.adverseDrugReaction.value}\",\n                remark: \"${personState.remark.value}\"           \n                }) {\n               age\n             }\n           }\n        `\n      };\n    } else {\n      //window.location.pathname.split('/')[3] patientId\n      requestBody = {\n        query: `\n           mutation {\n            updatePatient (\n              _id:\"${window.location.pathname.split('/')[3]}\",\n               patientInfoInput:{\n                caseCode: \"${personState.caseCode.value}\" ,\n                chineseName:\"${personState.chineseName.value}\",\n                englishName: \"${personState.englishName.value}\",\n                age:\"${personState.age.value}\",\n                contactNumber:\"${personState.contactNumber.value}\",\n                dateOfRegistration:\"${dateOfRegistration}\",\n                address: \"${personState.address.value}\",\n                allergy: \"${personState.allergy.value}\",\n                adverseDrugReaction: \"${personState.adverseDrugReaction.value}\",\n                remark: \"${personState.remark.value}\"           \n                }) {\n               age\n             }\n           }\n        `\n      };\n    }\n\n    setIsLoading(true);\n    fetch(graphqlServerUrl, {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('dispenseToken')\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error(\"Failed\");\n      }\n      return res.json();\n    }).then(resData => {\n      if (resData.errors) {\n        alert(resData.errors);\n      } else if (props.routeName === \"/patient/new\") {\n        setShowUploadSuccess(true);\n        setPersonState(initialState);\n      } else {\n        //update patient sidebar\n        props.updateInfo(window.location.pathname.split('/')[3], {\n          caseCode: personStateCopy.caseCode.value,\n          englishName: personStateCopy.englishName.value,\n          chineseName: personState.chineseName.value\n        });\n        setShowUploadSuccess(true);\n      }\n\n      setIsLoading(false);\n\n    }).catch(err => {\n\n      setIsLoading(false);\n      alert(\"An unexpected error occured!\");\n    })\n\n  }\n\n  const NKDAHandler = () => {\n    setPersonState({ ...personState, allergy: { ...personState.allergy, value: \"No Known Drug Allergy\" } });\n  }\n\n  const onInputChangeHandler = (field, event) => {\n    setPersonState({ ...personState, [field]: { touched: true, value: event.target.value, error: validation(field, event.target.value) } });\n  }\n\n  const validation = (field, value) => {\n    let error = false;\n    if (field === \"age\") {\n      error = value && value.replaceAll(\" \", \"\").length > 0 && (+value) >= 0 && (+value) <= 120 ? false : true;\n    } else if (field === \"contactNumber\") {\n      const regex = new RegExp(/^\\+?[0-9]+$/);\n      error = !regex.test(value.replaceAll(\" \", \"\"));\n    } else if (field === \"caseCode\") {\n      error = value.replaceAll(\" \", \"\").length === 0 ? true : false;\n    }\n    return error;\n  }\n\n  const closeModalHandler = () => {\n    setShowUploadSuccess(false);\n  }\n\n  let errorMsg = <p style={{ color: \"#f44336\", margin: \"2px\" }}>Invalid</p>;\n\n  return (\n    <Fragment>\n      {isLoading ? <div className={classes[\"form-container\"]}> <Loader /> </div> :\n        <form className={classes[\"form-container\"]} onSubmit={onSubmitHandler}>\n          <Modal show={showUploadSuccess} modalClosed={closeModalHandler}>\n            <div className={classes[\"success-text\"]}>\n              <p>Success!</p>\n              <button type=\"button\" onClick={closeModalHandler}>Confirm</button>\n            </div>\n          </Modal>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"caseCode\">Case Code:</label>\n            <input\n              className={personState.caseCode.error && personState.caseCode.touched ? classes[\"error\"] : null}\n              type=\"text\"\n              id=\"caseCode\"\n              name=\"caseCode\"\n              value={personState.caseCode.value}\n              onChange={(event) => onInputChangeHandler(\"caseCode\", event)} ></input>\n            {personState.caseCode.error && personState.caseCode.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"chineseName\">Chinese Name:</label>\n            <input\n              className={personState.chineseName.error && personState.chineseName.touched ? classes[\"error\"] : null}\n              type=\"text\"\n              id=\"chineseName\"\n              name=\"chineseName\"\n              value={personState.chineseName.value}\n              onChange={(event) => onInputChangeHandler(\"chineseName\", event)}></input>\n            {personState.chineseName.error && personState.chineseName.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"englishName\">English Name:</label>\n            <input\n              className={personState.englishName.error && personState.englishName.touched ? classes[\"error\"] : null}\n              type=\"text\"\n              id=\"englishName\"\n              name=\"englishName\"\n              value={personState.englishName.value}\n              onChange={(event) => onInputChangeHandler(\"englishName\", event)}></input>\n            {personState.englishName.error && personState.englishName.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"age\">Age:</label>\n            <input\n              className={personState.age.error && personState.age.touched ? classes[\"error\"] : null}\n              type=\"number\"\n              id=\"age\"\n              name=\"age\"\n              value={personState.age.value}\n              onChange={(event) => onInputChangeHandler(\"age\", event)}></input>\n            {personState.age.error && personState.age.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"contactNumber\">Contact Number:</label>\n            <input\n              className={personState.contactNumber.error && personState.contactNumber.touched ? classes[\"error\"] : null}\n              type=\"phone\"\n              id=\"contactNumber\"\n              name=\"contactNumber\"\n              value={personState.contactNumber.value}\n              onChange={(event) => onInputChangeHandler(\"contactNumber\", event)}></input>\n            {personState.contactNumber.error && personState.contactNumber.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"regDate\">Date of Registration</label>\n            <input\n              className={personState.dateOfRegistration.error && personState.dateOfRegistration.touched ? classes[\"error\"] : null}\n              type=\"date\"\n              id=\"regDate\"\n              name=\"regDate\"\n              value={personState.dateOfRegistration.value}\n              onChange={(event) => onInputChangeHandler(\"dateOfRegistration\", event)}></input>\n            {personState.dateOfRegistration.error && personState.dateOfRegistration.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"address\">Address:</label>\n            <textarea\n              className={personState.address.error && personState.address.touched ? classes[\"error\"] : null}\n              type=\"text\"\n              id=\"address\"\n              name=\"address\"\n              value={personState.address.value}\n              onChange={(event) => onInputChangeHandler(\"address\", event)}></textarea>\n            {personState.address.error && personState.address.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"allergy\" >Allergy:</label>\n            <div className={classes.NKDA_item} onClick={NKDAHandler}>NKDA</div>\n            <textarea\n              className={personState.allergy.error && personState.allergy.touched ? classes[\"error\"] : null}\n              id=\"allergy\"\n              name=\"allergy\"\n              rows=\"4\"\n              cols=\"20\"\n              value={personState.allergy.value}\n              onChange={(event) => onInputChangeHandler(\"allergy\", event)}></textarea>\n            {personState.allergy.error && personState.allergy.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"adr\">Adverse Drug Reaction:</label>\n            <textarea\n              className={personState.adverseDrugReaction.error && personState.adverseDrugReaction.touched ? classes[\"error\"] : null}\n              id=\"adr\"\n              name=\"adr\"\n              rows=\"4\"\n              cols=\"20\"\n              value={personState.adverseDrugReaction.value}\n              onChange={(event) => onInputChangeHandler(\"adverseDrugReaction\", event)}></textarea>\n            {personState.adverseDrugReaction.error && personState.adverseDrugReaction.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"remark\">Remark:</label>\n            <textarea\n              className={personState.remark.error && personState.remark.touched ? classes[\"error\"] : null}\n              id=\"remark\"\n              name=\"remark\"\n              rows=\"4\"\n              cols=\"20\"\n              value={personState.remark.value}\n              onChange={(event) => onInputChangeHandler(\"remark\", event)}></textarea>\n            {personState.remark.error && personState.remark.touched ? errorMsg : null}\n          </section>\n          <button type=\"submit\">{props.routeName === \"/patient/new\" ? \"Create\" : \"Update\"}</button>\n        </form>\n      }\n    </Fragment>\n  )\n}\n\nexport default PersonalInfo;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__kXC18\",\"load6\":\"Loader_load6__21Q3l\",\"round\":\"Loader_round__QCIGG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"NavigationItems_list__3Dhpt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-nav\":\"EPHeaderNav_main-nav__1cjQF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component-container\":\"ExistingPatientProfile_component-container__2mEvy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"DrugInfo_Layout__1hcSZ\"};","// exports.graphqlServerUrl='https://localhost:8000/graphql';\r\n\r\n// exports.graphqlServerUrl= 'https://whispering-basin-06963.herokuapp.com/graphql';\r\n\r\n// exports.graphqlServerUrl= \"https://cryptic-lake-90995.herokuapp.com/graphql\";\r\n\r\nexports.graphqlServerUrl= \"https://arcane-earth-96378.herokuapp.com/graphql\";","import React from 'react';\r\n\r\nexport default React.createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: (token, userId, tokenExpiration) => {\r\n        \r\n    },\r\n    logout: () => {}\r\n});","import React, { useRef, useEffect } from \"react\";\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\n\r\nconst OutsideAlerter = (props)=>{\r\n    const wrapperRef = useRef(null);\r\n    useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n                // alert(\"You clicked outside of me!\");\r\n                props.cancelShowLogout();\r\n            } else if (wrapperRef.current && wrapperRef.current.contains(event.target)){\r\n                props.showLogout();\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [wrapperRef]);   \r\n\r\n    return(\r\n        <div ref={wrapperRef}>{props.children}</div>\r\n    )\r\n}\r\n\r\n// function useOutsideAlerter(ref,props) {\r\n//     useEffect(() => {\r\n//         /**\r\n//          * Alert if clicked on outside of element\r\n//          */\r\n//         function handleClickOutside(event) {\r\n//             if (ref.current && !ref.current.contains(event.target)) {\r\n//                 // alert(\"You clicked outside of me!\");\r\n//                 props.cancelShowLogout();\r\n//             }\r\n//         }\r\n\r\n//         // Bind the event listener\r\n//         document.addEventListener(\"mousedown\", handleClickOutside);\r\n//         return () => {\r\n//             // Unbind the event listener on clean up\r\n//             document.removeEventListener(\"mousedown\", handleClickOutside);\r\n//         };\r\n//     }, [ref]);\r\n// }\r\n\r\n// /**\r\n//  * Component that alerts if you click outside of it\r\n//  */\r\n// export default function OutsideAlerter(props) {\r\n//     const wrapperRef = useRef(null);\r\n//     useOutsideAlerter(wrapperRef, props);\r\n\r\n//     return <div ref={wrapperRef}>{props.children}</div>;\r\n// }\r\n\r\nexport default OutsideAlerter;","import React, { useState, useContext } from 'react';\r\n\r\nimport AuthContext from '../../../context/auth-context'\r\nimport OutsideAlerter from '../../OutsideAlerter/OutsideAlerter';\r\nimport classes from './Toolbar.module.css';\r\nimport { IconButton } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst Toolbar = (props) => {\r\n    const [showLogout, setShowLogout] = useState(false);\r\n    const authData = useContext(AuthContext);\r\n\r\n    const logOutHandler = () => {\r\n        authData.logout();\r\n    }\r\n\r\n    const cancelShowLogoutHandler = () => {\r\n        setShowLogout(false);\r\n    }\r\n\r\n    const showLogoutHandler = () => {\r\n        setShowLogout(true);\r\n    }\r\n\r\n    return (\r\n        <div  className={classes.Toolbar}>\r\n            {/* < header className={classes.Toolbar} > */}\r\n            <IconButton onClick={props.drawerToggleClicked}>\r\n                <MenuIcon style={{ fill: \"white\", cursor: 'pointer' }} />\r\n            </IconButton>\r\n\r\n            <OutsideAlerter cancelShowLogout={cancelShowLogoutHandler} showLogout={showLogoutHandler}>\r\n                <div className={classes[\"circle\"]} >A</div>\r\n                <div\r\n                    className={classes[\"logout\"]}\r\n                    style={{ display: showLogout ? 'block' : 'none' }}>\r\n                    <ul >\r\n                        <li onClick={logOutHandler}>Log out</li>\r\n                    </ul>\r\n                </div>\r\n            </OutsideAlerter>\r\n\r\n            {/* </header> */}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Toolbar;","import React, { Fragment } from 'react';\r\n\r\nimport PharmacyIcon from '@material-ui/icons/LocalPharmacy';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <Fragment>\r\n        <div className={classes[\"Logo\"]}>\r\n            <PharmacyIcon style={{ fill: \"#ab1032\", fontSize: 50 }} />\r\n            <div> PHHK</div>\r\n        </div>\r\n        <div>\r\n            <p className={classes[\"welcome-msg\"]}>\r\n                Welcome, Admin\r\n            </p>\r\n        </div>\r\n        <div >\r\n            <p className={classes[\"demo\"]}>\r\n                Dispense Demo\r\n            </p>\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        {/* NavLink auto determines if it is active */}\r\n        <NavLink\r\n            exact={props.exact}\r\n            to={props.link}\r\n            activeClassName={classes.active}>\r\n            <div>{props.children}</div>\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport PatientIcon from '@material-ui/icons/PermContactCalendar';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport LoyaltyIcon from '@material-ui/icons/Loyalty';\r\n\r\n\r\nconst navigationItems = () => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/patient/new\">\r\n            <PersonAddIcon style={{fontSize: 30}}/><span className={classes.spacer} />New Patient\r\n            </NavigationItem>\r\n        <NavigationItem link=\"/patient/existing\">\r\n            <PatientIcon style={{fontSize: 30}}/><span className={classes.spacer} />Existing Patient\r\n        </NavigationItem>\r\n        <NavigationItem link=\"/druginfo\">\r\n            <LoyaltyIcon style={{fontSize: 30}}/><span className={classes.spacer} />Drug Information\r\n        </NavigationItem>       \r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React, {Fragment} from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../../UI/Backdrop/Backdrop';\r\n\r\nconst sideDrawer = (props) => {\r\n\r\n    let attachedClasses;\r\n\r\n    if(props.show) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    } else {\r\n        attachedClasses = [classes.SideDrawer, classes.Close];\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Backdrop show={props.show} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <div className={classes[\"spacer\"]}></div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Fragment, useState } from 'react';\r\n\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nconst Layout = (props) => {\r\n    const [showSideDrawer, setShowSideDrawer] = useState(false);\r\n\r\n    const sideDrawerToggleHandler = () => {\r\n        setShowSideDrawer(!showSideDrawer);\r\n    }\r\n\r\n    const sideDrawerCloseHandler = () => {\r\n        setShowSideDrawer(false);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Toolbar drawerToggleClicked={sideDrawerToggleHandler} />\r\n            <SideDrawer show={showSideDrawer} closed={sideDrawerCloseHandler} />\r\n            {/* <main className={classes.Content}> */}\r\n                {props.children}\r\n            {/* </main> */}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Layout;","import React from 'react';\n\nimport classes from './NewPatient.module.css';\nimport PersonalInfo from '../PersonalInfo/PersonalInfo';\n\nconst Patient = (props) => {\n\n    return (\n        <div className={classes[\"new-patient-container\"]}>\n            <div className={classes.background}>\n            </div>\n            <div className={classes[\"personal-info-container\"]}>\n                <PersonalInfo routeName=\"/patient/new\" token={props.token}/>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Patient;\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        {/* NavLink auto determines if it is active */}\r\n        <NavLink\r\n            to={props.link}\r\n            activeClassName={classes.active}>\r\n                 {props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React, {useState, useEffect} from 'react';\r\n\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst NavigationItems = (props) => {\r\n    const[patientBriefInfo, setPatientBriefInfo] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        setPatientBriefInfo(props.patientBriefInfo);\r\n    },[props]);\r\n\r\n    return (\r\n            <ul onClick={props.click} className={classes['list']}>\r\n                {patientBriefInfo? patientBriefInfo.map((patient,index) => {\r\n                  return  <NavigationItem link={\"/patient/existing/\" + patient._id} key={index}>\r\n                        {patient.caseCode + \" \" + patient.chineseName + \"(\" + patient.englishName + \")\"}\r\n                    </NavigationItem>\r\n                }):null}\r\n            </ul>\r\n    )\r\n};\r\n\r\nexport default NavigationItems;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst transformId = (id) => {\r\n    switch(id) {\r\n        case \"personalinfo\":\r\n            return \"Personal Information\";\r\n        case  \"transactionrecord\":\r\n            return \"Transaction Record\";    \r\n    }\r\n}\r\n\r\nconst navigationItem = (props) => {\r\n    return (\r\n    <li className={classes.NavigationItem} onClick={()=>props.onNavHandler(props.id) }>\r\n        <button className={props.id==props.clickedHeader?classes.active:null}>{transformId(props.id)}</button>\r\n        </li>\r\n        )\r\n};\r\n\r\nexport default navigationItem;\r\n\r\n//","import React from 'react';\n\nimport NavigationItem from './NavigationItem/NavigationItem';\nimport classes from './EPHeaderNav.module.css';\n\n\n\nconst mainNavigation = props => {\n  const id = window.location.pathname.split('/')[3];\n  const navItems = [\n    { id: 'personalinfo', text: 'Personal Information', link: `/patient/existing/${id}/personalinfo`, auth: true },\n    { id: 'transactionrecord', text: 'Transaction Record', link: `/patient/existing/${id}/transactionrecord`, auth: true },\n  ];\n\n  return (<nav>\n    <ul className={classes[\"main-nav\"]}>\n      {navItems.map(item => {\n         return <NavigationItem clickedHeader={props.clickedHeader} onNavHandler={props.onNavHandler} key={item.id} id={item.id} link={item.link} text={item.text} />\n      })}\n    </ul>\n  </nav>\n  )\n};\n\nexport default mainNavigation;\n","import React, { Suspense, useEffect, useState    } from 'react';\r\n\r\nimport Header from '../PatientProfile/ExistingPatientHeader/EPHeaderNav';\r\nimport classes from './ExistingPatientProfile.module.css';\r\nimport {graphqlServerUrl} from '../../../assets/String';\r\nconst TransactionRecord = React.lazy(() => import('./TransactionRecord/TransactionRecord'));\r\nconst PersonalInfo = React.lazy(() => import('../PersonalInfo/PersonalInfo'));\r\n\r\nconst ExistingPatientProfile = (props) => {\r\n\r\n    const [component, setComponent] = useState(\"personalinfo\");\r\n    const [patientInfo, setPatientInfo] = useState('');\r\n    \r\n    useEffect(() => {\r\n          const requestBody = {\r\n            query: `  \r\n                 query {\r\n                   patients(_id:\"${window.location.pathname.split('/')[3]}\") {\r\n                    caseCode\r\n                    chineseName \r\n                    englishName\r\n                   }\r\n                 }\r\n              `\r\n          };\r\n          fetch(graphqlServerUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+ localStorage.getItem(\"dispenseToken\")\r\n            }\r\n          }).then(res => {\r\n            if (res.status !== 200 && res.status !== 201) {\r\n              throw new Error(\"Failed\");\r\n    \r\n            }\r\n            return res.json();\r\n          }).then(resData => {\r\n            setPatientInfo([...resData.data.patients, {_id:window.location.pathname.split('/')[3]}]);\r\n    \r\n          }).catch(err => {\r\n            alert(\"An unexpected error occured!\");\r\n          })\r\n    \r\n      }, [window.location.pathname]);\r\n    \r\n    const onClickHandler = (id) => {\r\n        setComponent(id);\r\n    }\r\n\r\n    return (\r\n        <section >\r\n            <Header onNavHandler={onClickHandler} clickedHeader={component}/>\r\n            <div className={classes['component-container']}>\r\n                {component === \"personalinfo\" ?\r\n                    <Suspense fallback={<h1>loading...</h1>}>\r\n                        <PersonalInfo\r\n                            token={localStorage.getItem(\"dispenseToken\")}\r\n                            updateInfo={props.updateInfo}\r\n                            {...props}\r\n                            routeName=\"/patient/existing\"\r\n                        />\r\n                    </Suspense>\r\n                    : null}\r\n                {component === \"transactionrecord\" ?\r\n                    <Suspense fallback={<h1>loading...</h1>}>\r\n                        <TransactionRecord\r\n                        token={localStorage.getItem(\"dispenseToken\")}\r\n                        patientInfo={patientInfo}\r\n                        patientId={window.location.pathname.split('/')[3]}\r\n                            {...props}\r\n                        />\r\n                    </Suspense>\r\n                    : null}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nexport default React.memo(ExistingPatientProfile);","import React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport { graphqlServerUrl } from '../../../assets/String';\nimport NavigationItems from '../PatientSideBar/NavigationItems';\nimport classes from './ExistingPatient.module.css';\nimport ExistingPatientProfile from '../PatientProfile/ExistingPatientProfile';\nimport AuthContext from '../../../context/auth-context';\nimport Loader from '../../../UI/Loader/Loader';\n\n// const PersonalInfo = React.lazy(() => import('../PersonalInfo/Personalnfo')\n// );\n\n// const ExistingPatientProfile = React.lazy(() => import('../PatientProfile/ExistingPatientProfile'));\n\n\nconst Patient = (props) => {\n\n    const [patientBriefInfo, setPatientBriefInfo] = useState('');\n    const [isNavClick, setIsNavClick] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        const requestBody = {\n            query: `\n                 query {\n                   patients {\n                    _id\n                    caseCode\n                    chineseName \n                    englishName\n                   }\n                 }\n              `\n        };\n\n        setIsLoading(true);\n        fetch(graphqlServerUrl, {\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + props.token\n            }\n        }).then(res => {\n            if (res.status !== 200 && res.status !== 201) {\n                throw new Error(\"Failed\");\n\n            }\n            return res.json();\n        }).then(resData => {\n            setPatientBriefInfo([...resData.data.patients]);\n            setIsLoading(false);\n        }).catch(err => {\n            setIsLoading(false);\n        })\n    }, [])\n\n    const onNavHandler = () => {\n        setIsNavClick(true);\n    }\n\n    const updateInfoHandler = (id, infoObject) => {\n        const patientBriefInfoCopy = [...patientBriefInfo];\n        const index = patientBriefInfoCopy.findIndex(ele => ele._id === id);\n        patientBriefInfoCopy[index] = { ...infoObject, _id: id };\n\n        setPatientBriefInfo(patientBriefInfoCopy);\n    }\n    return (\n        <div className={classes[\"main-container\"]}>\n            <div>\n                <p className={classes['sidebar-header']}>Patient List</p>\n                <nav className={classes['sidebar']}>\n                {isLoading ? <Loader /> :\n                    <NavigationItems patientBriefInfo={patientBriefInfo} click={onNavHandler} />}\n                </nav>\n            </div>\n            <div className={classes[\"main-content\"]}>\n                {isNavClick ?\n                    <Route\n                        exact\n                        path=\"/patient/existing/:id\"\n                        render={props => (\n                            <ExistingPatientProfile\n                                token={props.token}\n                                updateInfo={updateInfoHandler}\n                                {...props}\n                            />\n                        )}\n                    />\n                    : null}\n\n            </div>\n        </div>\n    )\n}\n\nexport default Patient;\n","import React, { useState, useEffect } from 'react';\r\nimport { Fragment } from 'react';\r\n\r\nimport { graphqlServerUrl } from \"../../assets/String\";\r\nimport buttonClasses from '../../UI/Button/Button.module.css';\r\nimport classes from './DrugInfoEntry.module.css';\r\nimport Loader from '../../UI/Loader/Loader';\r\n\r\n\r\nconst DrugInfoEntry = (props) => {\r\n\r\n    const [drugInfo, setDrugInfo] = useState({ name: \"\", price: \"\", quantity: \"\" });\r\n\r\n    const [fieldErrors, setFieldErrors] = useState({\r\n        name: false,\r\n        price: false,\r\n    })\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    //for exisiting transaction entries\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        if (props.id) {\r\n            const requestBody = {\r\n                query: `\r\n                     query Drugs($id:ID) {\r\n                       drugs(_id:$id) {\r\n                        _id\r\n                        name\r\n                        price\r\n                        quantity\r\n                       }\r\n                     }\r\n                  `,\r\n                variables: {\r\n                    id: props.id\r\n                }\r\n            };\r\n            fetch(graphqlServerUrl, {\r\n                method: 'POST',\r\n                body: JSON.stringify(requestBody),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"dispenseToken\")\r\n                }\r\n            }).then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error(\"Failed\");\r\n                }\r\n                return res.json();\r\n            }).then(res => {\r\n                const reducedDrug = { ...res.data.drugs[0] };\r\n                console.log(reducedDrug);\r\n                setDrugInfo(reducedDrug);\r\n                setIsLoading(false);\r\n\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n            })\r\n\r\n        } else {\r\n            //set to initial value\r\n            setDrugInfo({ name: \"\", price: \"\", quantity: \"\" });\r\n            setIsLoading(false);\r\n        }\r\n        setFieldErrors({\r\n            name: false,\r\n            price: false,\r\n            quantity: false,\r\n        })\r\n    }, [props]);\r\n\r\n    const validateField = (value) => {\r\n        if (value && value !== \"\") {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const onFieldChange = (event, fieldName) => {\r\n        const touchedField = { ...fieldErrors[fieldName] };\r\n        touchedField.touched = true;\r\n\r\n        setDrugInfo({ ...drugInfo, [fieldName]: event.target.value });\r\n    }\r\n\r\n    const submitHandler = () => {\r\n\r\n        let allError = false;\r\n\r\n        allError = validateField(drugInfo.name) || validateField(drugInfo.price);\r\n\r\n        if (allError) {\r\n            setFieldErrors({\r\n                name: validateField(drugInfo.name),\r\n                price: validateField(drugInfo.price),\r\n            })\r\n            return;\r\n        }\r\n\r\n        let queryValue, requestBody;\r\n        if (props.id) {\r\n            queryValue = `  \r\n            mutation {\r\n               updateDrug(\r\n                    _id: \"${props.id}\",\r\n                   drugInput:{\r\n                     name:\"${drugInfo.name}\",\r\n                     quantity:\"${+drugInfo.quantity}\",\r\n                     price: ${+drugInfo.price},\r\n                     }\r\n               ) {\r\n                  name\r\n              }\r\n            }\r\n         `\r\n        } else {\r\n            queryValue = `  \r\n            mutation {\r\n               createDrug(\r\n                   drugInput:{\r\n                       name:\"${drugInfo.name}\",\r\n                       quantity:\"${+drugInfo.quantity}\",\r\n                       price: ${+drugInfo.price},\r\n                     }\r\n               ) \r\n            }\r\n         `\r\n        }\r\n\r\n        requestBody = {\r\n            query: queryValue\r\n        };\r\n\r\n        setIsLoading(true);\r\n        fetch(graphqlServerUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem(\"dispenseToken\")\r\n            }\r\n        }).then(res => {\r\n            if (res.status !== 200 && res.status !== 201) {\r\n                throw new Error(\"Failed\");\r\n            }\r\n            return res.json();\r\n        }).then(resData => {\r\n            if (resData.errors) {\r\n                alert(resData.errors);\r\n            } else {\r\n                //close modal and display data in transaction record\r\n                setIsLoading(false);\r\n                props.cancelModal();\r\n                if (props.id) {\r\n                    props.entryChangeHandler(\"update\", props.id, { ...drugInfo });\r\n                } else {\r\n                    props.entryChangeHandler(\"create\", null, { ...drugInfo, _id: resData.data.createDrug._id });\r\n                }\r\n            }\r\n        }).catch(err => {\r\n            setIsLoading(false);\r\n            alert(err);\r\n        })\r\n\r\n    }\r\n\r\n    const cancelErrors = () => {\r\n        setFieldErrors({\r\n            name: false,\r\n            price: false,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {isLoading ? <Loader /> :\r\n                <Fragment>\r\n                    <div className={classes[\"flex-container\"]}>\r\n                        <section>\r\n                            <h2>Drug Item Name:</h2>\r\n                            <textarea\r\n                                className={fieldErrors.name ? [classes[\"error\"]] : null}\r\n                                style={{ marginLeft: \"0\" }}\r\n                                rows=\"1\"\r\n                                cols=\"50\"\r\n                                type=\"text\"\r\n                                placeholder=\"Name\"\r\n                                value={drugInfo.name}\r\n                                onChange={(event) => onFieldChange(event, \"name\")} />\r\n                        </section>\r\n                        <section>\r\n                            <h2>Price:</h2>\r\n                            <input\r\n                                className={fieldErrors.price ? [classes[\"error\"]] : null}\r\n                                type=\"number\"\r\n                                placeholder=\"Price\"\r\n                                value={drugInfo.price}\r\n                                onChange={(event) => onFieldChange(event, \"price\")} />\r\n                        </section>\r\n                        <section>\r\n                            <h2>Quantity:</h2>\r\n                            <input\r\n                                type=\"number\"\r\n                                placeholder=\"Quantity\"\r\n                                value={drugInfo.quantity}\r\n                                onChange={(event) => onFieldChange(event, \"quantity\")} />\r\n                        </section>\r\n                        <div />\r\n                    </div>\r\n                    <section style={{ textAlign: \"center\", marginTop: \"30\" }}>\r\n                        <button className={buttonClasses.button} type=\"button\" onClick={submitHandler}>{props.id ? \"Update\" : \"Create\"}</button>\r\n                    </section>\r\n                </Fragment>\r\n            }\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DrugInfoEntry;","import React, { Fragment, useState, useEffect, Suspense } from 'react';\r\nimport { Paper, TableBody, TableCell, TableRow, IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport { graphqlServerUrl } from '../../assets/String';\r\nimport Loader from '../../UI/Loader/Loader';\r\nimport Button from '../../UI/Button/Button';\r\nimport Modal from '../../UI/Modal/Modal';\r\nimport DrugInfoEntry from '../DrugInfoEntry/DrugInfoEntry';\r\nimport useTable from '../../UI/Table/useTable';\r\nimport classes from './DrugInfo.module.css';\r\n\r\nconst headCells = [\r\n    { id: \"name\", label: \"Drug Item\" },\r\n    { id: \"price\", label: \"Price\" },\r\n    { id: \"quantity\", label: \"Available Quantity\" },\r\n    { id: \"edit\", label: \"Edit\", disableSorting: true }\r\n]\r\n\r\nconst DrugInfo = (props) => {\r\n    const [drugs, setDrugs] = useState([\r\n        { name: \"Loading\", price: \"\", quantity: 0 },\r\n    ]);\r\n\r\n    const [filterFn, setFilterFn] = useState({\r\n        fn: items => items,\r\n        value: null\r\n    });\r\n\r\n    const [openEntry, setOpenEntry] = useState({ open: false, id: null });\r\n    const [openDeleteModal, setOpenDeleteModal] = useState({ open: false, id: null });\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPaginationAndSorting\r\n    } = useTable(drugs, headCells, filterFn,[5,10,15]);\r\n\r\n    useEffect(() => {\r\n        const requestBody = {\r\n            query: `\r\n                 query Drugs {\r\n                   drugs{\r\n                       _id\r\n                       name \r\n                       price\r\n                       quantity\r\n                   }\r\n                 }\r\n              `\r\n        };\r\n\r\n        fetch(graphqlServerUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('dispenseToken')\r\n            }\r\n        }).then(res => {\r\n            if (res.status !== 200 && res.status !== 201) {\r\n                throw new Error(\"Failed\");\r\n            }\r\n            return res.json();\r\n        }).then(resData => {\r\n            resData.data.drugs.map(ele => {\r\n                ele.price = +ele.price;\r\n            })\r\n            setDrugs(resData.data.drugs);\r\n        }).catch(err => {\r\n            alert(err);\r\n        })\r\n    }, []);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value === \"\") {\r\n                    return items;\r\n                } else {\r\n                    console.log(items[0].name.toLowerCase());\r\n                    return items.filter(x => x.name.toLowerCase().includes(target.value.toLowerCase()));\r\n                }\r\n            },\r\n            value: target.value\r\n        })\r\n    }\r\n\r\n\r\n    const openEntryHandler = (id) => {\r\n        setOpenEntry({ open: true, id: id });\r\n    }\r\n\r\n    const closeEntryHandler = () => {\r\n        setOpenEntry({ open: false, id: null });\r\n    }\r\n\r\n    const openDeleteModalHandler = (id) => {\r\n        setOpenDeleteModal({ open: true, id: id });\r\n    }\r\n\r\n    const closeDeleteModalHandler = () => {\r\n        setOpenDeleteModal({ open: false, id: null });\r\n    }\r\n\r\n    const deleteHandler = () => {\r\n        const requestBody = {\r\n            query: `\r\n                 mutation DeleteDrug($id:ID!) {\r\n                   deleteDrug(_id:$id)\r\n                 }\r\n              `,\r\n            variables: {\r\n                id: openDeleteModal.id\r\n            }\r\n        };\r\n\r\n        setIsDeleting(true);\r\n        fetch(graphqlServerUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('dispenseToken')\r\n            }\r\n        }).then(res => {\r\n            if (res.status !== 200 && res.status !== 201) {\r\n                throw new Error(\"Failed\");\r\n            }\r\n            return res.json();\r\n        }).then(resData => {\r\n            setIsDeleting(false);\r\n            closeDeleteModalHandler();\r\n            operationHandler(\"delete\", openDeleteModal.id, null);\r\n        }).catch(err => {\r\n            alert(err);\r\n            setIsDeleting(false);\r\n        })\r\n    }\r\n\r\n    const operationHandler = (operation, id, entry) => {\r\n        const drugsCopy = [...drugs];\r\n        switch (operation) {\r\n            case \"delete\":\r\n                const indexDelete = drugsCopy.findIndex(ele => ele._id === id);\r\n                drugsCopy.splice(indexDelete, 1);\r\n                setDrugs(drugsCopy);\r\n                break;\r\n            case \"update\":\r\n                const indexUpdate = drugsCopy.findIndex(ele => ele._id === id);\r\n                drugsCopy[indexUpdate] = { ...entry };\r\n                setDrugs(drugsCopy);\r\n                break;\r\n            case \"create\":\r\n                drugsCopy.push({ ...entry });\r\n                setDrugs(drugsCopy);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Layout}>\r\n            <textarea\r\n                value={filterFn.value?filterFn.value:\"\"}\r\n                placeholder=\"Search\"\r\n                rows=\"1\"\r\n                cols=\"160\"\r\n                onChange={handleSearch}\r\n            />\r\n            <Modal show={openEntry.open} modalClosed={closeEntryHandler}>\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                    <DrugInfoEntry\r\n                        token={localStorage.getItem('dispenseToken')}\r\n                        cancelModal={closeEntryHandler}\r\n                        id={openEntry.id}\r\n                        entryChangeHandler={operationHandler}\r\n                    />\r\n                </Suspense>\r\n            </Modal>\r\n            <Modal show={openDeleteModal.open} modalClosed={closeDeleteModalHandler}>\r\n                {isDeleting ? <Loader /> :\r\n                    <Fragment>\r\n                        <p style={{ fontSize: \"large\" }}>Are you sure you want to delete this entry?</p>\r\n                        <Button buttonNames={[\"Delete\", \"Cancel\"]} action={deleteHandler} cancel={closeDeleteModalHandler} />\r\n                    </Fragment>}\r\n            </Modal>\r\n            <div style={{display: \"flex\", alignItems:\"center\", justifyContent:\"flex-end\"}}>\r\n                <IconButton onClick={() => openEntryHandler(null)}>\r\n                    <AddCircleIcon style={{ fill: \"green\", cursor: 'pointer' }} />\r\n                </IconButton>\r\n                <span>Add new entry</span>\r\n            </div>\r\n            <Paper>\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {recordsAfterPaginationAndSorting().map(ele => (\r\n                            <TableRow key={ele._id} >\r\n                                <TableCell align=\"left\" width=\"220\" key={ele._id + \"name\"} >{ele.name}</TableCell>\r\n                                <TableCell align=\"left\" width=\"220\" key={ele._id + \"price\"}>{ele.price}</TableCell>\r\n                                <TableCell align=\"left\" width=\"220\" key={ele._id + \"quantity\"}>{ele.quantity}</TableCell>\r\n                                <TableCell align=\"left\" width=\"220\" key={ele._id + \"edit\"}>\r\n                                    <Fragment>\r\n                                        {drugs.length > 1 ?\r\n                                            <Fragment>\r\n                                                <IconButton onClick={() => openEntryHandler(ele._id)}>\r\n                                                    <EditIcon style={{ fill: \"#1053ab\", cursor: 'pointer' }} />\r\n                                                </IconButton>\r\n                                                <IconButton onClick={() => openDeleteModalHandler(ele._id)}>\r\n                                                    <DeleteIcon style={{ fill: \"black\", cursor: 'pointer' }} />\r\n                                                </IconButton>\r\n                                            </Fragment>\r\n                                            : null\r\n                                        }\r\n                                    </Fragment>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DrugInfo; ","import React, { Fragment } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport Layout from '../components/Layout/Layout'\r\nimport classes from './Main.module.css';\r\nimport NewPatient from '../components/Patient/NewPatient/NewPatient';\r\nimport ExistingPatient from '../components/Patient/ExisitingPatient/ExistingPatient';\r\nimport DrugInfo from '../components/DrugInfo/DrugInfo';\r\n\r\n\r\nconst Main = (props) => {\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* <AuthContext.Consumer> */}\r\n            {/* {(context) => {\r\n                if (context.token) { */}\r\n            {\r\n                localStorage.getItem(\"dispenseToken\")!=null && localStorage.getItem(\"dispenseToken\")!=\"null\"?\r\n                    (\r\n                        <Layout>\r\n                            <main className={classes.main_container}>\r\n                                {/* <menu className={classes.main_sidebar}>\r\n                                <NavigationItems />\r\n                            </menu> */}\r\n                                <Switch>\r\n                                    <Route\r\n                                        path=\"/patient/new\"\r\n                                        render={props => (\r\n                                            <NewPatient\r\n                                                {...props}\r\n                                                token={localStorage.getItem(\"dispenseToken\")}\r\n                                                routeName=\"/patient/new\"\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                    <Route\r\n                                        path=\"/patient/existing\"\r\n                                        render={props => (\r\n                                            <ExistingPatient\r\n                                                token={localStorage.getItem(\"dispenseToken\")}\r\n                                                {...props}\r\n                                                routeName=\"/patient/existing\"\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                       <Route\r\n                                        path=\"/druginfo\"\r\n                                        render={props => (\r\n                                            <DrugInfo\r\n                                                token={localStorage.getItem(\"dispenseToken\")}\r\n                                                {...props}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Switch>\r\n                            </main>\r\n                        </Layout>\r\n                    )\r\n                    : <Redirect to='/signin' />\r\n            }\r\n            {/* }} */}\r\n            {/* </AuthContext.Consumer> */}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Main;","import React, { useRef, useContext, useState } from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\n\r\nimport { graphqlServerUrl } from '../assets/String'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport AuthContext from '../context/auth-context';\r\nimport Loader from '../UI/Loader/Loader';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const authData = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n\r\n    const requestBody = {\r\n      query: `\r\n         query {\r\n           login (email: \"${email}\", password: \"${password}\") {\r\n             userId\r\n             token\r\n             tokenExpiration\r\n           }\r\n         }\r\n      `\r\n    };\r\n\r\n    setIsLoading(true);\r\n    fetch(graphqlServerUrl, {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \r\n      }\r\n    }).then(res => {\r\n      if (res.status !== 200 && res.status !== 201) {\r\n        throw new Error(\"Failed\");\r\n      }\r\n\r\n      return res.json();\r\n    }).then(resData => {\r\n      if (resData.data.login.token) {\r\n        authData.login(\r\n          resData.data.login.token,\r\n          resData.data.login.userId,\r\n          resData.data.login.tokenExpiration);\r\n      }\r\n      \r\n    }).catch(err => {\r\n      setIsLoading(false);\r\n      alert(\"Incorrect email or password!\"); \r\n    })\r\n\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Consumer>\r\n      {(context) => {\r\n        if (!context.token) {\r\n          return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n              {isLoading? <Loader />: null}\r\n              <CssBaseline />\r\n              <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                  <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                  Sign in\r\n        </Typography>\r\n                <form className={classes.form} noValidate onSubmit={submitHandler}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    inputRef={emailRef}\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    autoFocus\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    inputRef={passwordRef}\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                  >\r\n                    Sign In\r\n          </Button>\r\n\r\n                </form>\r\n              </div>\r\n              <Box mt={8}>\r\n              </Box>\r\n              <p>(For demo purpose)You can use test@test.com as the email and 123456 as the password</p>\r\n            </Container>\r\n          )\r\n        } else {\r\n          return <Redirect to=\"/\" />\r\n        }\r\n      }}\r\n    </AuthContext.Consumer>\r\n  );\r\n}","import React, { Fragment, useReducer, useEffect,Suspense } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport Main from './Main/Main';\nimport LoginPage from './auth/Signin';\nimport AuthContext from './context/auth-context';\nconst PrintEntry = React.lazy(() => import('./components/Patient/PatientProfile/TransactionRecord/PrintTransaction/PrintTransaction'));\n\nconst authStateReducer = (currentAuthState, action) => {\n  switch (action.type) {\n    case 'Login':\n      localStorage.setItem(\"dispenseToken\",action.token);\n      return { ...currentAuthState, token: action.token, userId: action.userId };\n    case 'Logout':\n      localStorage.removeItem(\"dispenseToken\");\n      return { ...currentAuthState, token: null, userId: null };\n    default:\n      throw new Error('Should not get there!');\n  }\n};\n\n\nconst App = props => {\n\n  const [authState, dispatch] = useReducer(authStateReducer, {});\n  \n  useEffect(() => {\n    document.title = \"Dispense\"\n }, []);\n\n  const login = (token, userId, tokenExpiration) => {\n    dispatch({ type: 'Login', token: token, userId: userId });\n  }\n\n  const logout = () => {\n    dispatch({ type: 'Logout' });\n  }\n\n  return (\n    <BrowserRouter>\n      <Fragment>\n        <AuthContext.Provider value={{\n          token: authState.token,\n          userId: authState.userId,\n          login: login,\n          logout: logout\n        }}>\n          <main>\n            <Switch>\n              <Route\n                path=\"/signin\"\n                render={props => (\n                  <LoginPage\n                    {...props}\n                  />\n                )}\n              />\n              <Route  \n              path=\"/print\"\n                render={props => (\n                  <Suspense fallback={<div>Loading...</div>}>\n                      <PrintEntry/>\n                  </Suspense>\n                )}\n              />\n              <Route\n                path=\"/\"\n                render={props => (\n                  <Main\n                    {...props}\n                  />\n                )}\n              />\n              <Redirect to=\"/\" />\n            </Switch>\n          </main>\n        </AuthContext.Provider>\n      </Fragment>\n    </BrowserRouter>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\n\nimport classes from './Loader.module.css';\n\nconst loader = props => (\n  <div className={classes.Loader}>Loading...</div>\n);\n\nexport default loader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1FLmz\",\"Open\":\"SideDrawer_Open__1HvEi\",\"Close\":\"SideDrawer_Close__2M6UG\",\"spacer\":\"SideDrawer_spacer__1DPvu\"};","import React, { Fragment, useEffect } from 'react';\n\nimport classes from './Modal.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { IconButton } from '@material-ui/core';\n\n\nconst Modal = (props) => {\n\n  return (\n    <Fragment>\n      <Backdrop show={props.show}  />\n      <div\n        className={classes.Modal}\n        style={{\n          display: props.show ? 'block' : 'none',\n          transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n          opacity: props.show ? '1' : '0',\n          width: props.width,\n          height:props.height,\n        }}>\n         <div className={classes[\"close-icon-container\"]}>\n           <IconButton onClick={props.modalClosed}>\n             <CloseIcon style={{ cursor: 'pointer' }}/>\n           </IconButton>\n           </div> \n        {props.children}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Modal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2QoFF\",\"button-container\":\"Button_button-container__3ZwVA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fvrF\",\"spacer\":\"NavigationItems_spacer__F1HBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"ExistingPatient_main-container__syIGb\",\"sidebar\":\"ExistingPatient_sidebar__3PZ9k\",\"sidebar-header\":\"ExistingPatient_sidebar-header__3cHRe\"};","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__12p80\",\"circle\":\"Toolbar_circle__UcnzW\",\"logout\":\"Toolbar_logout__dpzyF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3c4-b\",\"welcome-msg\":\"Logo_welcome-msg__y2J9L\",\"demo\":\"Logo_demo__3DcFA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-patient-container\":\"NewPatient_new-patient-container__1I9xr\",\"personal-info-container\":\"NewPatient_personal-info-container__3Zj-v\",\"background\":\"NewPatient_background__3Tu4d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex-container\":\"DrugInfoEntry_flex-container__3Yn0x\",\"error\":\"DrugInfoEntry_error__2ZeR7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__32yG2\",\"active\":\"NavigationItem_active__XopZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1gfAu\",\"close-icon-container\":\"Modal_close-icon-container__2XWjD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__Y3yKC\",\"active\":\"NavigationItem_active__rgK2T\",\"spacer\":\"NavigationItem_spacer__cHSST\"};"],"sourceRoot":""}