{"version":3,"sources":["components/Modal/Modal.js","components/Patient/PersonalInfo/PersonalInfo.module.css","components/Backdrop/Backdrop.module.css","Main/Main.module.css","components/Patient/PersonalInfo/PersonalInfo.js","components/Loader/Loader.module.css","components/Patient/PatientSideBar/NavigationItems.module.css","components/Patient/PatientProfile/ExistingPatientHeader/EPHeaderNav.module.css","components/Patient/PatientProfile/ExistingPatientProfile.module.css","components/DrugInfo/DrugInfo.module.css","assets/String.js","context/auth-context.js","components/OutsideAlerter/OutsideAlerter.js","components/Navigation/Toolbar/Toolbar.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Patient/NewPatient/NewPatient.js","components/Patient/PatientSideBar/NavigationItem/NavigationItem.js","components/Patient/PatientSideBar/NavigationItems.js","components/Patient/PatientProfile/ExistingPatientHeader/NavigationItem/NavigationItem.js","components/Patient/PatientProfile/ExistingPatientHeader/EPHeaderNav.js","components/Patient/PatientProfile/ExistingPatientProfile.js","components/Patient/ExisitingPatient/ExistingPatient.js","components/Table/useTable.js","components/DrugInfo/DrugInfo.js","Main/Main.js","auth/Signin.js","App.js","serviceWorker.js","index.js","components/Loader/Loader.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Patient/ExisitingPatient/ExistingPatient.module.css","components/Backdrop/Backdrop.js","components/Navigation/Toolbar/Toolbar.module.css","components/Logo/Logo.module.css","components/Patient/NewPatient/NewPatient.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Modal/Modal.module.css","components/Patient/PatientSideBar/NavigationItem/NavigationItem.module.css","components/Patient/PatientProfile/ExistingPatientHeader/NavigationItem/NavigationItem.module.css"],"names":["Modal","props","show","className","classes","style","display","transform","opacity","width","height","onClick","modalClosed","cursor","children","module","exports","initialState","caseCode","touched","error","value","chineseName","englishName","age","contactNumber","dateOfRegistration","address","allergy","adverseDrugReaction","remark","PersonalInfo","useState","personState","setPersonState","isLoading","setIsLoading","showUploadSuccess","setShowUploadSuccess","useEffect","test","window","location","pathname","requestBody","query","split","fetch","graphqlServerUrl","method","body","JSON","stringify","headers","localStorage","getItem","then","res","status","alert","json","resData","data","patients","Date","toISOString","substring","catch","err","onInputChangeHandler","field","event","target","validation","replaceAll","length","RegExp","closeModalHandler","errorMsg","color","margin","onSubmit","preventDefault","personStateCopy","cloneDeep","key","routeName","String","valueOf","Error","errors","updateInfo","type","htmlFor","id","name","onChange","NKDA_item","rows","cols","React","createContext","token","userId","login","tokenExpiration","logout","OutsideAlerter","wrapperRef","useRef","handleClickOutside","current","contains","cancelShowLogout","showLogout","document","addEventListener","removeEventListener","ref","Toolbar","setShowLogout","authData","useContext","AuthContext","IconButton","drawerToggleClicked","fill","logo","fontSize","navigationItem","NavigationItem","exact","to","link","activeClassName","active","navigationItems","NavigationItems","spacer","sideDrawer","attachedClasses","SideDrawer","Open","Close","Backdrop","clicked","closed","join","Logo","Layout","showSideDrawer","setShowSideDrawer","Patient","background","patientBriefInfo","setPatientBriefInfo","click","map","patient","index","_id","onNavHandler","clickedHeader","transformId","mainNavigation","navItems","text","auth","item","TransactionRecord","lazy","memo","component","setComponent","patientInfo","setPatientInfo","fallback","patientId","isNavClick","setIsNavClick","updateInfoHandler","infoObject","patientBriefInfoCopy","findIndex","ele","Loader","path","render","useStyles","makeStyles","theme","table","marginTop","spacing","fontWeight","backgroundColor","align","useTable","records","headCells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","descendingComparator","a","b","TblContainer","Table","stickyHeader","TblHead","TableHead","TableRow","TableCell","sortDirection","disableSorting","label","TableSortLabel","direction","cellId","TblPagination","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","recordsAfterPaginationAndSorting","array","comparator","sortArray","sort","stableSort","fn","getComparator","slice","DrugInfo","price","quantity","drugs","setDrugs","items","setFilterFn","placeholder","e","console","log","toLowerCase","filter","x","includes","Paper","TableBody","Main","main_container","NewPatient","ExistingPatient","paper","flexDirection","alignItems","avatar","palette","secondary","main","form","submit","SignIn","emailRef","passwordRef","submitHandler","useHistory","email","password","Consumer","context","Container","maxWidth","CssBaseline","Avatar","Typography","variant","noValidate","TextField","inputRef","required","fullWidth","autoComplete","autoFocus","Button","Box","mt","PrintEntry","authStateReducer","currentAuthState","action","setItem","removeItem","App","useReducer","authState","dispatch","title","Provider","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message","loader","backdrop"],"mappings":"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","file":"static/js/main.d1fc8809.chunk.js","sourcesContent":["import React, { Fragment, useEffect } from 'react';\n\nimport classes from './Modal.module.css';\nimport Backdrop from '../Backdrop/Backdrop';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { IconButton } from '@material-ui/core';\n\n\nconst Modal = (props) => {\n\n  return (\n    <Fragment>\n      <Backdrop show={props.show}  />\n      <div\n        className={classes.Modal}\n        style={{\n          display: props.show ? 'block' : 'none',\n          transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n          opacity: props.show ? '1' : '0',\n          width: props.width,\n          height:props.height,\n        }}>\n         <div className={classes[\"close-icon-container\"]}>\n           <IconButton onClick={props.modalClosed}>\n             <CloseIcon style={{ cursor: 'pointer' }}/>\n           </IconButton>\n           </div> \n        {props.children}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Modal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-container\":\"PersonalInfo_form-container__2QQ0t\",\"info-item\":\"PersonalInfo_info-item__rP1KZ\",\"NKDA_item\":\"PersonalInfo_NKDA_item__1FdCt\",\"error\":\"PersonalInfo_error__24V_t\",\"success-text\":\"PersonalInfo_success-text__1kTOT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1Ovz0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"Main_main_container__3lk47\"};","import React, { Fragment, useState, useEffect } from 'react';\n\n\nimport Modal from '../../Modal/Modal';\nimport Loader from '../../Loader/Loader';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { graphqlServerUrl } from '../../../assets/String';\nimport classes from './PersonalInfo.module.css';\n\n\nconst initialState = {\n  caseCode: { touched: false, error: false, value: \"\" },\n  chineseName: { touched: false, error: false, value: \"\" },\n  englishName: { touched: false, error: false, value: \"\" },\n  age: { touched: false, error: false, value: \"\" },\n  contactNumber: { touched: false, error: false, value: \"\" },\n  dateOfRegistration: { touched: false, error: false, value: \"\" },\n  address: { touched: false, error: false, value: \"\" },\n  allergy: { touched: false, error: false, value: \"\" },\n  adverseDrugReaction: { touched: false, error: false, value: \"\" },\n  remark: { touched: false, error: false, value: \"\" }\n};\n\nconst PersonalInfo = (props) => {\n  const [personState, setPersonState] = useState(initialState);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [showUploadSuccess, setShowUploadSuccess] = useState(false);\n\n  useEffect(() => {\n    const route = /[\\/]patient[\\/]existing[\\/].+/\n\n    if (route.test(window.location.pathname)) {\n      const requestBody = {\n        query: `  \n             query {\n               patients(_id:\"${window.location.pathname.split('/')[3]}\") {\n                caseCode\n                chineseName \n                englishName\n                age\n                contactNumber\n                dateOfRegistration\n                address\n                allergy\n                adverseDrugReaction\n                remark\n                updatedAt\n               }\n             }\n          `\n      };\n      setIsLoading(true);\n      fetch(graphqlServerUrl, {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('dispenseToken')\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          setIsLoading(false);\n          alert(\"error\");\n        }\n        return res.json();\n      }).then(resData => {\n        setPersonState({\n          caseCode: { touched: false, error: false, value: resData.data.patients[0].caseCode },\n          chineseName: { touched: false, error: false, value: resData.data.patients[0].chineseName },\n          englishName: { touched: false, error: false, value: resData.data.patients[0].englishName },\n          age: { touched: false, error: false, value: resData.data.patients[0].age },\n          contactNumber: { touched: false, error: false, value: resData.data.patients[0].contactNumber },\n          dateOfRegistration: { touched: false, error: false, value: resData.data.patients[0].dateOfRegistration ? new Date(resData.data.patients[0].dateOfRegistration).toISOString().substring(0, 10) : \"\" },\n          address: { touched: false, error: false, value: resData.data.patients[0].address },\n          allergy: { touched: false, error: false, value: resData.data.patients[0].allergy },\n          adverseDrugReaction: { touched: false, error: false, value: resData.data.patients[0].adverseDrugReaction },\n          remark: { touched: false, error: false, value: resData.data.patients[0].remark }\n        });\n        setIsLoading(false);\n      }).catch(err => {\n        setIsLoading(false);\n        alert(err);\n      })\n    } else {\n      setPersonState(initialState);\n    }\n\n  }, [window.location.pathname]);\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n\n    let dateOfRegistration = \"\";\n\n    if (personState.dateOfRegistration.value.length > 0) {\n      dateOfRegistration = new Date(personState.dateOfRegistration.value).toISOString();\n    }\n\n    const personStateCopy = cloneDeep(personState);\n    let error = false;\n    for (const key in personStateCopy) {\n      error = error || validation(key, personStateCopy[key].value);\n      personStateCopy[key].touched = true;\n      personStateCopy[key].error = validation(key, personStateCopy[key].value);\n    }\n\n\n    if (error) {\n      setPersonState({ ...personStateCopy });\n      return;\n    }\n\n    let requestBody;\n\n    if (props.routeName === \"/patient/new\") {\n      requestBody = {\n        query: `\n           mutation {\n            createPatient (\n               patientInfoInput:{\n                caseCode: \"${personState.caseCode.value}\" ,\n                chineseName:\"${personState.chineseName.value}\",\n                englishName: \"${personState.englishName.value}\",\n                age:\"${String.valueOf(personState.age.value)}\",\n                contactNumber:\"${personState.contactNumber.value}\",\n                dateOfRegistration:\"${dateOfRegistration}\",\n                address: \"${personState.address.value}\",\n                allergy: \"${personState.allergy.value}\",\n                adverseDrugReaction: \"${personState.adverseDrugReaction.value}\",\n                remark: \"${personState.remark.value}\"           \n                }) {\n               age\n             }\n           }\n        `\n      };\n    } else {\n      //window.location.pathname.split('/')[3] patientId\n      requestBody = {\n        query: `\n           mutation {\n            updatePatient (\n              _id:\"${window.location.pathname.split('/')[3]}\",\n               patientInfoInput:{\n                caseCode: \"${personState.caseCode.value}\" ,\n                chineseName:\"${personState.chineseName.value}\",\n                englishName: \"${personState.englishName.value}\",\n                age:\"${personState.age.value}\",\n                contactNumber:\"${personState.contactNumber.value}\",\n                dateOfRegistration:\"${dateOfRegistration}\",\n                address: \"${personState.address.value}\",\n                allergy: \"${personState.allergy.value}\",\n                adverseDrugReaction: \"${personState.adverseDrugReaction.value}\",\n                remark: \"${personState.remark.value}\"           \n                }) {\n               age\n             }\n           }\n        `\n      };\n    }\n\n    setIsLoading(true);\n    fetch(graphqlServerUrl, {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('dispenseToken')\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error(\"Failed\");\n      }\n      return res.json();\n    }).then(resData => {\n      if (resData.errors) {\n        alert(resData.errors);\n      } else if (props.routeName === \"/patient/new\") {\n        setShowUploadSuccess(true);\n        setPersonState(initialState);\n      } else {\n        //update patient sidebar\n        props.updateInfo(window.location.pathname.split('/')[3], {\n          caseCode: personStateCopy.caseCode.value,\n          englishName: personStateCopy.englishName.value,\n          chineseName: personState.chineseName.value\n        });\n        setShowUploadSuccess(true);\n      }\n\n      setIsLoading(false);\n\n    }).catch(err => {\n\n      setIsLoading(false);\n      alert(\"An unexpected error occured!\");\n    })\n\n  }\n\n  const NKDAHandler = () => {\n    setPersonState({ ...personState, allergy: { ...personState.allergy, value: \"No Known Drug Allergy\" } });\n  }\n\n  const onInputChangeHandler = (field, event) => {\n    setPersonState({ ...personState, [field]: { touched: true, value: event.target.value, error: validation(field, event.target.value) } });\n  }\n\n  const validation = (field, value) => {\n    let error = false;\n    if (field === \"age\") {\n      error = value && value.replaceAll(\" \", \"\").length > 0 && (+value) >= 0 && (+value) <= 120 ? false : true;\n    } else if (field === \"contactNumber\") {\n      const regex = new RegExp(/^\\+?[0-9]+$/);\n      error = !regex.test(value.replaceAll(\" \", \"\"));\n    } else if (field === \"caseCode\") {\n      error = value.replaceAll(\" \", \"\").length === 0 ? true : false;\n    }\n    return error;\n  }\n\n  const closeModalHandler = () => {\n    setShowUploadSuccess(false);\n  }\n\n  let errorMsg = <p style={{ color: \"#f44336\", margin: \"2px\" }}>Invalid</p>;\n\n  return (\n    <Fragment>\n      {isLoading ? <div className={classes[\"form-container\"]}> <Loader /> </div> :\n        <form className={classes[\"form-container\"]} onSubmit={onSubmitHandler}>\n          <Modal show={showUploadSuccess} modalClosed={closeModalHandler}>\n            <div className={classes[\"success-text\"]}>\n              <p>Success!</p>\n              <button type=\"button\" onClick={closeModalHandler}>Confirm</button>\n            </div>\n          </Modal>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"caseCode\">Case Code:</label>\n            <input\n              className={personState.caseCode.error && personState.caseCode.touched ? classes[\"error\"] : null}\n              type=\"text\"\n              id=\"caseCode\"\n              name=\"caseCode\"\n              value={personState.caseCode.value}\n              onChange={(event) => onInputChangeHandler(\"caseCode\", event)} ></input>\n            {personState.caseCode.error && personState.caseCode.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"chineseName\">Chinese Name:</label>\n            <input\n              className={personState.chineseName.error && personState.chineseName.touched ? classes[\"error\"] : null}\n              type=\"text\"\n              id=\"chineseName\"\n              name=\"chineseName\"\n              value={personState.chineseName.value}\n              onChange={(event) => onInputChangeHandler(\"chineseName\", event)}></input>\n            {personState.chineseName.error && personState.chineseName.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"englishName\">English Name:</label>\n            <input\n              className={personState.englishName.error && personState.englishName.touched ? classes[\"error\"] : null}\n              type=\"text\"\n              id=\"englishName\"\n              name=\"englishName\"\n              value={personState.englishName.value}\n              onChange={(event) => onInputChangeHandler(\"englishName\", event)}></input>\n            {personState.englishName.error && personState.englishName.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"age\">Age:</label>\n            <input\n              className={personState.age.error && personState.age.touched ? classes[\"error\"] : null}\n              type=\"number\"\n              id=\"age\"\n              name=\"age\"\n              value={personState.age.value}\n              onChange={(event) => onInputChangeHandler(\"age\", event)}></input>\n            {personState.age.error && personState.age.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"contactNumber\">Contact Number:</label>\n            <input\n              className={personState.contactNumber.error && personState.contactNumber.touched ? classes[\"error\"] : null}\n              type=\"phone\"\n              id=\"contactNumber\"\n              name=\"contactNumber\"\n              value={personState.contactNumber.value}\n              onChange={(event) => onInputChangeHandler(\"contactNumber\", event)}></input>\n            {personState.contactNumber.error && personState.contactNumber.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"regDate\">Date of Registration</label>\n            <input\n              className={personState.dateOfRegistration.error && personState.dateOfRegistration.touched ? classes[\"error\"] : null}\n              type=\"date\"\n              id=\"regDate\"\n              name=\"regDate\"\n              value={personState.dateOfRegistration.value}\n              onChange={(event) => onInputChangeHandler(\"dateOfRegistration\", event)}></input>\n            {personState.dateOfRegistration.error && personState.dateOfRegistration.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"address\">Address:</label>\n            <textarea\n              className={personState.address.error && personState.address.touched ? classes[\"error\"] : null}\n              type=\"text\"\n              id=\"address\"\n              name=\"address\"\n              value={personState.address.value}\n              onChange={(event) => onInputChangeHandler(\"address\", event)}></textarea>\n            {personState.address.error && personState.address.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"allergy\" >Allergy:</label>\n            <div className={classes.NKDA_item} onClick={NKDAHandler}>NKDA</div>\n            <textarea\n              className={personState.allergy.error && personState.allergy.touched ? classes[\"error\"] : null}\n              id=\"allergy\"\n              name=\"allergy\"\n              rows=\"4\"\n              cols=\"20\"\n              value={personState.allergy.value}\n              onChange={(event) => onInputChangeHandler(\"allergy\", event)}></textarea>\n            {personState.allergy.error && personState.allergy.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"adr\">Adverse Drug Reaction:</label>\n            <textarea\n              className={personState.adverseDrugReaction.error && personState.adverseDrugReaction.touched ? classes[\"error\"] : null}\n              id=\"adr\"\n              name=\"adr\"\n              rows=\"4\"\n              cols=\"20\"\n              value={personState.adverseDrugReaction.value}\n              onChange={(event) => onInputChangeHandler(\"adverseDrugReaction\", event)}></textarea>\n            {personState.adverseDrugReaction.error && personState.adverseDrugReaction.touched ? errorMsg : null}\n          </section>\n          <section className={classes[\"info-item\"]}>\n            <label htmlFor=\"remark\">Remark:</label>\n            <textarea\n              className={personState.remark.error && personState.remark.touched ? classes[\"error\"] : null}\n              id=\"remark\"\n              name=\"remark\"\n              rows=\"4\"\n              cols=\"20\"\n              value={personState.remark.value}\n              onChange={(event) => onInputChangeHandler(\"remark\", event)}></textarea>\n            {personState.remark.error && personState.remark.touched ? errorMsg : null}\n          </section>\n          <button type=\"submit\">{props.routeName === \"/patient/new\" ? \"Create\" : \"Update\"}</button>\n        </form>\n      }\n    </Fragment>\n  )\n}\n\nexport default PersonalInfo;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__5YQT7\",\"load6\":\"Loader_load6__1X31U\",\"round\":\"Loader_round__1L8ck\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"NavigationItems_list__3Dhpt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-nav\":\"EPHeaderNav_main-nav__1cjQF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component-container\":\"ExistingPatientProfile_component-container__2mEvy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"DrugInfo_Layout__1hcSZ\"};","// exports.graphqlServerUrl='https://localhost:8000/graphql';\r\n\r\n// exports.graphqlServerUrl= 'https://whispering-basin-06963.herokuapp.com/graphql';\r\n\r\n// exports.graphqlServerUrl= \"https://cryptic-lake-90995.herokuapp.com/graphql\";\r\n\r\nexports.graphqlServerUrl= \"https://arcane-earth-96378.herokuapp.com/graphql\";","import React from 'react';\r\n\r\nexport default React.createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: (token, userId, tokenExpiration) => {\r\n        \r\n    },\r\n    logout: () => {}\r\n});","import React, { useRef, useEffect } from \"react\";\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\n\r\nconst OutsideAlerter = (props)=>{\r\n    const wrapperRef = useRef(null);\r\n    useEffect(() => {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n                // alert(\"You clicked outside of me!\");\r\n                props.cancelShowLogout();\r\n            } else if (wrapperRef.current && wrapperRef.current.contains(event.target)){\r\n                props.showLogout();\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [wrapperRef]);   \r\n\r\n    return(\r\n        <div ref={wrapperRef}>{props.children}</div>\r\n    )\r\n}\r\n\r\n// function useOutsideAlerter(ref,props) {\r\n//     useEffect(() => {\r\n//         /**\r\n//          * Alert if clicked on outside of element\r\n//          */\r\n//         function handleClickOutside(event) {\r\n//             if (ref.current && !ref.current.contains(event.target)) {\r\n//                 // alert(\"You clicked outside of me!\");\r\n//                 props.cancelShowLogout();\r\n//             }\r\n//         }\r\n\r\n//         // Bind the event listener\r\n//         document.addEventListener(\"mousedown\", handleClickOutside);\r\n//         return () => {\r\n//             // Unbind the event listener on clean up\r\n//             document.removeEventListener(\"mousedown\", handleClickOutside);\r\n//         };\r\n//     }, [ref]);\r\n// }\r\n\r\n// /**\r\n//  * Component that alerts if you click outside of it\r\n//  */\r\n// export default function OutsideAlerter(props) {\r\n//     const wrapperRef = useRef(null);\r\n//     useOutsideAlerter(wrapperRef, props);\r\n\r\n//     return <div ref={wrapperRef}>{props.children}</div>;\r\n// }\r\n\r\nexport default OutsideAlerter;","import React, { useState, useContext } from 'react';\r\n\r\nimport AuthContext from '../../../context/auth-context'\r\nimport OutsideAlerter from '../../OutsideAlerter/OutsideAlerter';\r\nimport classes from './Toolbar.module.css';\r\nimport { IconButton } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst Toolbar = (props) => {\r\n    const [showLogout, setShowLogout] = useState(false);\r\n    const authData = useContext(AuthContext);\r\n\r\n    const logOutHandler = () => {\r\n        authData.logout();\r\n    }\r\n\r\n    const cancelShowLogoutHandler = () => {\r\n        setShowLogout(false);\r\n    }\r\n\r\n    const showLogoutHandler = () => {\r\n        setShowLogout(true);\r\n    }\r\n\r\n    return (\r\n        <div  className={classes.Toolbar}>\r\n            {/* < header className={classes.Toolbar} > */}\r\n            <IconButton onClick={props.drawerToggleClicked}>\r\n                <MenuIcon style={{ fill: \"white\", cursor: 'pointer' }} />\r\n            </IconButton>\r\n\r\n            <OutsideAlerter cancelShowLogout={cancelShowLogoutHandler} showLogout={showLogoutHandler}>\r\n                <div className={classes[\"circle\"]} >A</div>\r\n                <div\r\n                    className={classes[\"logout\"]}\r\n                    style={{ display: showLogout ? 'block' : 'none' }}>\r\n                    <ul >\r\n                        <li onClick={logOutHandler}>Log out</li>\r\n                    </ul>\r\n                </div>\r\n            </OutsideAlerter>\r\n\r\n            {/* </header> */}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Toolbar;","import React, { Fragment } from 'react';\r\n\r\nimport PharmacyIcon from '@material-ui/icons/LocalPharmacy';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <Fragment>\r\n        <div className={classes[\"Logo\"]}>\r\n            <PharmacyIcon style={{ fill: \"#ab1032\", fontSize: 50 }} />\r\n            <div> PHHK</div>\r\n        </div>\r\n        <div>\r\n            <p className={classes[\"welcome-msg\"]}>\r\n                Welcome, Admin\r\n            </p>\r\n        </div>\r\n        <div >\r\n            <p className={classes[\"demo\"]}>\r\n                Dispense Demo\r\n            </p>\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        {/* NavLink auto determines if it is active */}\r\n        <NavLink\r\n            exact={props.exact}\r\n            to={props.link}\r\n            activeClassName={classes.active}>\r\n            <div>{props.children}</div>\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport PatientIcon from '@material-ui/icons/PermContactCalendar';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport LoyaltyIcon from '@material-ui/icons/Loyalty';\r\n\r\n\r\nconst navigationItems = () => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/patient/new\">\r\n            <PersonAddIcon style={{fontSize: 30}}/><span className={classes.spacer} />New Patient\r\n            </NavigationItem>\r\n        <NavigationItem link=\"/patient/existing\">\r\n            <PatientIcon style={{fontSize: 30}}/><span className={classes.spacer} />Existing Patient\r\n        </NavigationItem>\r\n        <NavigationItem link=\"/druginfo\">\r\n            <LoyaltyIcon style={{fontSize: 30}}/><span className={classes.spacer} />Drug Information\r\n        </NavigationItem>       \r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React, {Fragment} from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../Backdrop/Backdrop';\r\n\r\nconst sideDrawer = (props) => {\r\n\r\n    let attachedClasses;\r\n\r\n    if(props.show) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    } else {\r\n        attachedClasses = [classes.SideDrawer, classes.Close];\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Backdrop show={props.show} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <div className={classes[\"spacer\"]}></div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Fragment, useState } from 'react';\r\n\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nconst Layout = (props) => {\r\n    const [showSideDrawer, setShowSideDrawer] = useState(false);\r\n\r\n    const sideDrawerToggleHandler = () => {\r\n        setShowSideDrawer(!showSideDrawer);\r\n    }\r\n\r\n    const sideDrawerCloseHandler = () => {\r\n        setShowSideDrawer(false);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Toolbar drawerToggleClicked={sideDrawerToggleHandler} />\r\n            <SideDrawer show={showSideDrawer} closed={sideDrawerCloseHandler} />\r\n            {/* <main className={classes.Content}> */}\r\n                {props.children}\r\n            {/* </main> */}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Layout;","import React from 'react';\n\nimport classes from './NewPatient.module.css';\nimport PersonalInfo from '../PersonalInfo/PersonalInfo';\n\nconst Patient = (props) => {\n\n    return (\n        <div className={classes[\"new-patient-container\"]}>\n            <div className={classes.background}>\n            </div>\n            <div className={classes[\"personal-info-container\"]}>\n                <PersonalInfo routeName=\"/patient/new\" token={props.token}/>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Patient;\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        {/* NavLink auto determines if it is active */}\r\n        <NavLink\r\n            to={props.link}\r\n            activeClassName={classes.active}>\r\n                 {props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React, {useState, useEffect} from 'react';\r\n\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst NavigationItems = (props) => {\r\n    const[patientBriefInfo, setPatientBriefInfo] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        setPatientBriefInfo(props.patientBriefInfo);\r\n    },[props]);\r\n\r\n    return (\r\n            <ul onClick={props.click} className={classes['list']}>\r\n                {patientBriefInfo? patientBriefInfo.map((patient,index) => {\r\n                  return  <NavigationItem link={\"/patient/existing/\" + patient._id} key={index}>\r\n                        {patient.caseCode + \" \" + patient.chineseName + \"(\" + patient.englishName + \")\"}\r\n                    </NavigationItem>\r\n                }):null}\r\n            </ul>\r\n    )\r\n};\r\n\r\nexport default NavigationItems;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst transformId = (id) => {\r\n    switch(id) {\r\n        case \"personalinfo\":\r\n            return \"Personal Information\";\r\n        case  \"transactionrecord\":\r\n            return \"Transaction Record\";    \r\n    }\r\n}\r\n\r\nconst navigationItem = (props) => {\r\n    return (\r\n    <li className={classes.NavigationItem} onClick={()=>props.onNavHandler(props.id) }>\r\n        <button className={props.id==props.clickedHeader?classes.active:null}>{transformId(props.id)}</button>\r\n        </li>\r\n        )\r\n};\r\n\r\nexport default navigationItem;\r\n\r\n//","import React from 'react';\n\nimport NavigationItem from './NavigationItem/NavigationItem';\nimport classes from './EPHeaderNav.module.css';\n\n\n\nconst mainNavigation = props => {\n  const id = window.location.pathname.split('/')[3];\n  const navItems = [\n    { id: 'personalinfo', text: 'Personal Information', link: `/patient/existing/${id}/personalinfo`, auth: true },\n    { id: 'transactionrecord', text: 'Transaction Record', link: `/patient/existing/${id}/transactionrecord`, auth: true },\n  ];\n\n  return (<nav>\n    <ul className={classes[\"main-nav\"]}>\n      {navItems.map(item => {\n         return <NavigationItem clickedHeader={props.clickedHeader} onNavHandler={props.onNavHandler} key={item.id} id={item.id} link={item.link} text={item.text} />\n      })}\n    </ul>\n  </nav>\n  )\n};\n\nexport default mainNavigation;\n","import React, { Suspense, useEffect, useState    } from 'react';\r\n\r\nimport Header from '../PatientProfile/ExistingPatientHeader/EPHeaderNav';\r\nimport classes from './ExistingPatientProfile.module.css';\r\nimport {graphqlServerUrl} from '../../../assets/String';\r\nconst TransactionRecord = React.lazy(() => import('./TransactionRecord/TransactionRecord'));\r\nconst PersonalInfo = React.lazy(() => import('../PersonalInfo/PersonalInfo'));\r\n\r\nconst ExistingPatientProfile = (props) => {\r\n\r\n    const [component, setComponent] = useState(\"personalinfo\");\r\n    const [patientInfo, setPatientInfo] = useState('');\r\n    \r\n    useEffect(() => {\r\n          const requestBody = {\r\n            query: `  \r\n                 query {\r\n                   patients(_id:\"${window.location.pathname.split('/')[3]}\") {\r\n                    caseCode\r\n                    chineseName \r\n                    englishName\r\n                   }\r\n                 }\r\n              `\r\n          };\r\n          fetch(graphqlServerUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+ localStorage.getItem(\"dispenseToken\")\r\n            }\r\n          }).then(res => {\r\n            if (res.status !== 200 && res.status !== 201) {\r\n              throw new Error(\"Failed\");\r\n    \r\n            }\r\n            return res.json();\r\n          }).then(resData => {\r\n            setPatientInfo([...resData.data.patients, {_id:window.location.pathname.split('/')[3]}]);\r\n    \r\n          }).catch(err => {\r\n            alert(\"An unexpected error occured!\");\r\n          })\r\n    \r\n      }, [window.location.pathname]);\r\n    \r\n    const onClickHandler = (id) => {\r\n        setComponent(id);\r\n    }\r\n\r\n    return (\r\n        <section >\r\n            <Header onNavHandler={onClickHandler} clickedHeader={component}/>\r\n            <div className={classes['component-container']}>\r\n                {component === \"personalinfo\" ?\r\n                    <Suspense fallback={<h1>loading...</h1>}>\r\n                        <PersonalInfo\r\n                            token={localStorage.getItem(\"dispenseToken\")}\r\n                            updateInfo={props.updateInfo}\r\n                            {...props}\r\n                            routeName=\"/patient/existing\"\r\n                        />\r\n                    </Suspense>\r\n                    : null}\r\n                {component === \"transactionrecord\" ?\r\n                    <Suspense fallback={<h1>loading...</h1>}>\r\n                        <TransactionRecord\r\n                        token={localStorage.getItem(\"dispenseToken\")}\r\n                        patientInfo={patientInfo}\r\n                        patientId={window.location.pathname.split('/')[3]}\r\n                            {...props}\r\n                        />\r\n                    </Suspense>\r\n                    : null}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nexport default React.memo(ExistingPatientProfile);","import React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport { graphqlServerUrl } from '../../../assets/String';\nimport NavigationItems from '../PatientSideBar/NavigationItems';\nimport classes from './ExistingPatient.module.css';\nimport ExistingPatientProfile from '../PatientProfile/ExistingPatientProfile';\nimport AuthContext from '../../../context/auth-context';\nimport Loader from '../../Loader/Loader';\n\n// const PersonalInfo = React.lazy(() => import('../PersonalInfo/Personalnfo')\n// );\n\n// const ExistingPatientProfile = React.lazy(() => import('../PatientProfile/ExistingPatientProfile'));\n\n\nconst Patient = (props) => {\n\n    const [patientBriefInfo, setPatientBriefInfo] = useState('');\n    const [isNavClick, setIsNavClick] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        const requestBody = {\n            query: `\n                 query {\n                   patients {\n                    _id\n                    caseCode\n                    chineseName \n                    englishName\n                   }\n                 }\n              `\n        };\n\n        setIsLoading(true);\n        fetch(graphqlServerUrl, {\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + props.token\n            }\n        }).then(res => {\n            if (res.status !== 200 && res.status !== 201) {\n                throw new Error(\"Failed\");\n\n            }\n            return res.json();\n        }).then(resData => {\n            setPatientBriefInfo([...resData.data.patients]);\n            setIsLoading(false);\n        }).catch(err => {\n            setIsLoading(false);\n        })\n    }, [])\n\n    const onNavHandler = () => {\n        setIsNavClick(true);\n    }\n\n    const updateInfoHandler = (id, infoObject) => {\n        const patientBriefInfoCopy = [...patientBriefInfo];\n        const index = patientBriefInfoCopy.findIndex(ele => ele._id === id);\n        patientBriefInfoCopy[index] = { ...infoObject, _id: id };\n\n        setPatientBriefInfo(patientBriefInfoCopy);\n    }\n    return (\n        <div className={classes[\"main-container\"]}>\n            <div>\n                <p className={classes['sidebar-header']}>Patient List</p>\n                <nav className={classes['sidebar']}>\n                {isLoading ? <Loader /> :\n                    <NavigationItems patientBriefInfo={patientBriefInfo} click={onNavHandler} />}\n                </nav>\n            </div>\n            <div className={classes[\"main-content\"]}>\n                {isNavClick ?\n                    <Route\n                        exact\n                        path=\"/patient/existing/:id\"\n                        render={props => (\n                            <ExistingPatientProfile\n                                token={props.token}\n                                updateInfo={updateInfoHandler}\n                                {...props}\n                            />\n                        )}\n                    />\n                    : null}\n\n            </div>\n        </div>\n    )\n}\n\nexport default Patient;\n","import React, { useState } from 'react';\r\nimport { makeStyles, Table, TableCell, TableHead, TablePagination, TableRow, TableSortLabel } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    table: {\r\n        marginTop: theme.spacing(3),\r\n        '& thead th': {\r\n            fontWeight: '600',\r\n            color: '#ffffff',\r\n            backgroundColor: '#f5073b',\r\n            align: 'left',\r\n            width: '100'\r\n        },\r\n        \"& tbody td\": {\r\n            fontWeight: '300',\r\n            align: 'left',\r\n            width: '100'\r\n        },\r\n        '& tbody tr:hover': {\r\n            backgroundColor: \"#fffbf2\",\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function useTable(records, headCells, filterFn) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const pages = [5, 10, 15];\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(pages[page]);\r\n    const [order, setOrder] = useState();\r\n    const [orderBy, setOrderBy] = useState();\r\n\r\n    const TblContainer = props => (\r\n        <Table stickyHeader className={classes.table}>\r\n            {props.children}\r\n        </Table>\r\n    )\r\n\r\n    const TblHead = props => {\r\n\r\n        const handleSortRequest = cellId => {\r\n            const isAsc = orderBy === cellId && order === \"asc\";\r\n            setOrder(isAsc ? 'desc' : 'asc');\r\n            setOrderBy(cellId);\r\n        }\r\n\r\n        return (\r\n            <TableHead>\r\n                <TableRow>\r\n                    {\r\n                        headCells.map(ele => (\r\n                            <TableCell key={ele.id}\r\n                                sortDirection={orderBy === ele.id ? order : false}>\r\n                                {ele.disableSorting ? ele.label :\r\n                                    <TableSortLabel\r\n                                        active={orderBy === ele.id}\r\n                                        direction={orderBy === ele.id ? order : \"asc\"}\r\n                                        onClick={() => { handleSortRequest(ele.id) }} >\r\n                                        {ele.label}\r\n                                    </TableSortLabel>}\r\n                            </TableCell>\r\n                        ))\r\n                    }\r\n                </TableRow>\r\n            </TableHead>\r\n        )\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    }\r\n\r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    }\r\n\r\n    const stableSort = (array, comparator) => {\r\n        const sortArray = array.map((ele, index) => [ele, index]);\r\n\r\n        sortArray.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        })\r\n\r\n        return sortArray.map(ele => ele[0]);\r\n    }\r\n\r\n    const getComparator = (order, orderBy) => {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    const descendingComparator = (a, b, orderBy) => {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    const recordsAfterPaginationAndSorting = () => {\r\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy))\r\n            .slice(page * rowsPerPage, (page + 1) * rowsPerPage);\r\n    }\r\n\r\n    const TblPagination = () => (<TablePagination\r\n        component=\"div\"\r\n        page={page}\r\n        rowsPerPageOptions={pages}\r\n        rowsPerPage={rowsPerPage}\r\n        count={records ? records.length : 0}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n    />)\r\n\r\n    return {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPaginationAndSorting\r\n    };\r\n}","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Paper, TableBody, TableCell, TableRow,makeStyles } from '@material-ui/core';\r\n\r\nimport Loader from '../Loader/Loader';\r\nimport useTable from '../Table/useTable';\r\nimport { graphqlServerUrl } from '../../assets/String';\r\nimport classes from './DrugInfo.module.css';\r\n\r\nconst headCells = [\r\n    { id: \"name\", label: \"Drug Item\" },\r\n    { id: \"price\", label: \"Price\" },\r\n    { id: \"quantity\", label: \"Available Quantity\" }\r\n]\r\n\r\nconst DrugInfo = (props) => {\r\n    const [drugs, setDrugs] = useState([\r\n        { name: \"Loading\", price: \"\", quantity: \"\" },\r\n    ]);\r\n\r\n    const [filterFn, setFilterFn] = useState({\r\n        fn: items => items,\r\n        value: null\r\n    });\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPaginationAndSorting\r\n    } = useTable(drugs, headCells, filterFn);\r\n\r\n    useEffect(() => {\r\n        const requestBody = {\r\n            query: `\r\n                 query Drugs {\r\n                   drugs{\r\n                       _id\r\n                       name \r\n                       price\r\n                       quantity\r\n                   }\r\n                 }\r\n              `\r\n        };\r\n\r\n        fetch(graphqlServerUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('dispenseToken')\r\n            }\r\n        }).then(res => {\r\n            if (res.status !== 200 && res.status !== 201) {\r\n                throw new Error(\"Failed\");\r\n            }\r\n            return res.json();\r\n        }).then(resData => {\r\n            resData.data.drugs.map(ele => {\r\n                ele.price = +ele.price;\r\n            })\r\n            setDrugs(resData.data.drugs);\r\n        }).catch(err => {\r\n            alert(err);\r\n        })\r\n    }, []);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value === \"\") {\r\n                    return items;\r\n                } else {\r\n                    console.log(items[0].name.toLowerCase());\r\n                    return items.filter(x => x.name.toLowerCase().includes(target.value.toLowerCase()));\r\n                }\r\n            },\r\n            value: target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Layout}>\r\n            <textarea\r\n                value={filterFn.value}\r\n                placeholder=\"Search\"\r\n                rows=\"1\"\r\n                cols=\"160\"\r\n                onChange={handleSearch}\r\n            />\r\n            <Paper>\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {recordsAfterPaginationAndSorting().map(ele => (\r\n                            <TableRow key={ele._id}>\r\n                                <TableCell>{ele.name}</TableCell>\r\n                                <TableCell>{ele.price}</TableCell>\r\n                                <TableCell>{ele.quantity}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DrugInfo; ","import React, { Fragment } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport Layout from '../components/Layout/Layout'\r\nimport classes from './Main.module.css';\r\nimport NewPatient from '../components/Patient/NewPatient/NewPatient';\r\nimport ExistingPatient from '../components/Patient/ExisitingPatient/ExistingPatient';\r\nimport DrugInfo from '../components/DrugInfo/DrugInfo';\r\n\r\n\r\nconst Main = (props) => {\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* <AuthContext.Consumer> */}\r\n            {/* {(context) => {\r\n                if (context.token) { */}\r\n            {\r\n                localStorage.getItem(\"dispenseToken\")!=null && localStorage.getItem(\"dispenseToken\")!=\"null\"?\r\n                    (\r\n                        <Layout>\r\n                            <main className={classes.main_container}>\r\n                                {/* <menu className={classes.main_sidebar}>\r\n                                <NavigationItems />\r\n                            </menu> */}\r\n                                <Switch>\r\n                                    <Route\r\n                                        path=\"/patient/new\"\r\n                                        render={props => (\r\n                                            <NewPatient\r\n                                                {...props}\r\n                                                token={localStorage.getItem(\"dispenseToken\")}\r\n                                                routeName=\"/patient/new\"\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                    <Route\r\n                                        path=\"/patient/existing\"\r\n                                        render={props => (\r\n                                            <ExistingPatient\r\n                                                token={localStorage.getItem(\"dispenseToken\")}\r\n                                                {...props}\r\n                                                routeName=\"/patient/existing\"\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                       <Route\r\n                                        path=\"/druginfo\"\r\n                                        render={props => (\r\n                                            <DrugInfo\r\n                                                token={localStorage.getItem(\"dispenseToken\")}\r\n                                                {...props}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Switch>\r\n                            </main>\r\n                        </Layout>\r\n                    )\r\n                    : <Redirect to='/signin' />\r\n            }\r\n            {/* }} */}\r\n            {/* </AuthContext.Consumer> */}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Main;","import React, { useRef, useContext, useState } from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\n\r\nimport { graphqlServerUrl } from '../assets/String'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport AuthContext from '../context/auth-context';\r\nimport Loader from '../components/Loader/Loader';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const authData = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n\r\n    const requestBody = {\r\n      query: `\r\n         query {\r\n           login (email: \"${email}\", password: \"${password}\") {\r\n             userId\r\n             token\r\n             tokenExpiration\r\n           }\r\n         }\r\n      `\r\n    };\r\n\r\n    setIsLoading(true);\r\n    fetch(graphqlServerUrl, {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \r\n      }\r\n    }).then(res => {\r\n      if (res.status !== 200 && res.status !== 201) {\r\n        throw new Error(\"Failed\");\r\n      }\r\n\r\n      return res.json();\r\n    }).then(resData => {\r\n      if (resData.data.login.token) {\r\n        authData.login(\r\n          resData.data.login.token,\r\n          resData.data.login.userId,\r\n          resData.data.login.tokenExpiration);\r\n      }\r\n      \r\n    }).catch(err => {\r\n      setIsLoading(false);\r\n      alert(\"Incorrect email or password!\"); \r\n    })\r\n\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Consumer>\r\n      {(context) => {\r\n        if (!context.token) {\r\n          return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n              {isLoading? <Loader />: null}\r\n              <CssBaseline />\r\n              <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                  <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                  Sign in\r\n        </Typography>\r\n                <form className={classes.form} noValidate onSubmit={submitHandler}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    inputRef={emailRef}\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    autoFocus\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    inputRef={passwordRef}\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                  >\r\n                    Sign In\r\n          </Button>\r\n\r\n                </form>\r\n              </div>\r\n              <Box mt={8}>\r\n              </Box>\r\n              <p>(For demo purpose)You can use test@test.com as the email and 123456 as the password</p>\r\n            </Container>\r\n          )\r\n        } else {\r\n          return <Redirect to=\"/\" />\r\n        }\r\n      }}\r\n    </AuthContext.Consumer>\r\n  );\r\n}","import React, { Fragment, useReducer, useEffect,Suspense } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport Main from './Main/Main';\nimport LoginPage from './auth/Signin';\nimport AuthContext from './context/auth-context';\nconst PrintEntry = React.lazy(() => import('./components/Patient/PatientProfile/TransactionRecord/PrintTransaction/PrintTransaction'));\n\nconst authStateReducer = (currentAuthState, action) => {\n  switch (action.type) {\n    case 'Login':\n      localStorage.setItem(\"dispenseToken\",action.token);\n      return { ...currentAuthState, token: action.token, userId: action.userId };\n    case 'Logout':\n      localStorage.removeItem(\"dispenseToken\");\n      return { ...currentAuthState, token: null, userId: null };\n    default:\n      throw new Error('Should not get there!');\n  }\n};\n\n\nconst App = props => {\n\n  const [authState, dispatch] = useReducer(authStateReducer, {});\n  \n  useEffect(() => {\n    document.title = \"Dispense\"\n }, []);\n\n  const login = (token, userId, tokenExpiration) => {\n    dispatch({ type: 'Login', token: token, userId: userId });\n  }\n\n  const logout = () => {\n    dispatch({ type: 'Logout' });\n  }\n\n  return (\n    <BrowserRouter>\n      <Fragment>\n        <AuthContext.Provider value={{\n          token: authState.token,\n          userId: authState.userId,\n          login: login,\n          logout: logout\n        }}>\n          <main>\n            <Switch>\n              <Route\n                path=\"/signin\"\n                render={props => (\n                  <LoginPage\n                    {...props}\n                  />\n                )}\n              />\n              <Route  \n              path=\"/print\"\n                render={props => (\n                  <Suspense fallback={<div>Loading...</div>}>\n                      <PrintEntry/>\n                  </Suspense>\n                )}\n              />\n              <Route\n                path=\"/\"\n                render={props => (\n                  <Main\n                    {...props}\n                  />\n                )}\n              />\n              <Redirect to=\"/\" />\n            </Switch>\n          </main>\n        </AuthContext.Provider>\n      </Fragment>\n    </BrowserRouter>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\n\nimport classes from './Loader.module.css';\n\nconst loader = props => (\n  <div className={classes.Loader}>Loading...</div>\n);\n\nexport default loader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1FLmz\",\"Open\":\"SideDrawer_Open__1HvEi\",\"Close\":\"SideDrawer_Close__2M6UG\",\"spacer\":\"SideDrawer_spacer__1DPvu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fvrF\",\"spacer\":\"NavigationItems_spacer__F1HBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"ExistingPatient_main-container__syIGb\",\"sidebar\":\"ExistingPatient_sidebar__3PZ9k\",\"sidebar-header\":\"ExistingPatient_sidebar-header__3cHRe\"};","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__12p80\",\"circle\":\"Toolbar_circle__UcnzW\",\"logout\":\"Toolbar_logout__dpzyF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3c4-b\",\"welcome-msg\":\"Logo_welcome-msg__y2J9L\",\"demo\":\"Logo_demo__3DcFA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-patient-container\":\"NewPatient_new-patient-container__1I9xr\",\"personal-info-container\":\"NewPatient_personal-info-container__3Zj-v\",\"background\":\"NewPatient_background__3Tu4d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__32yG2\",\"active\":\"NavigationItem_active__XopZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__35rfT\",\"close-icon-container\":\"Modal_close-icon-container__2dioi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__Y3yKC\",\"active\":\"NavigationItem_active__rgK2T\",\"spacer\":\"NavigationItem_spacer__cHSST\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1eRaQ\",\"active\":\"NavigationItem_active__1Y64k\"};"],"sourceRoot":""}